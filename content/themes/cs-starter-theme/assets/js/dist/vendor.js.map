{"version":3,"sources":["jquery-ui.js","cs-dialog.js","bg-srcset.js","slick.js","parallax.js","parsley.js","nl.js"],"names":[],"mappingshBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACn4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"vendor.js","sourcesContent":["/*! jQuery UI - v1.12.1 - 2019-05-09\n * http://jqueryui.com\n * Includes: effect.js\n * Copyright jQuery Foundation and other contributors; Licensed MIT */\n\n(function (t) {\n    \"function\" == typeof define && define.amd ? define([\"jquery\"], t) : t(jQuery)\n})(function (t) {\n    t.ui = t.ui || {}, t.ui.version = \"1.12.1\";\n    var e = \"ui-effects-\", i = \"ui-effects-style\", s = \"ui-effects-animated\", n = t;\n    t.effects = {effect: {}}, function (t, e) {\n        function i(t, e, i) {\n            var s = u[e.type] || {};\n            return null == t ? i || !e.def ? null : e.def : (t = s.floor ? ~~t : parseFloat(t), isNaN(t) ? e.def : s.mod ? (t + s.mod) % s.mod : 0 > t ? 0 : t > s.max ? s.max : t)\n        }\n\n        function s(i) {\n            var s = h(), n = s._rgba = [];\n            return i = i.toLowerCase(), f(l, function (t, o) {\n                var a, r = o.re.exec(i), l = r && o.parse(r), h = o.space || \"rgba\";\n                return l ? (a = s[h](l), s[c[h].cache] = a[c[h].cache], n = s._rgba = a._rgba, !1) : e\n            }), n.length ? (\"0,0,0,0\" === n.join() && t.extend(n, o.transparent), s) : o[i]\n        }\n\n        function n(t, e, i) {\n            return i = (i + 1) % 1, 1 > 6 * i ? t + 6 * (e - t) * i : 1 > 2 * i ? e : 2 > 3 * i ? t + 6 * (e - t) * (2 / 3 - i) : t\n        }\n\n        var o,\n            a = \"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\",\n            r = /^([\\-+])=\\s*(\\d+\\.?\\d*)/, l = [{\n                re: /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n                parse: function (t) {\n                    return [t[1], t[2], t[3], t[4]]\n                }\n            }, {\n                re: /rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n                parse: function (t) {\n                    return [2.55 * t[1], 2.55 * t[2], 2.55 * t[3], t[4]]\n                }\n            }, {\n                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse: function (t) {\n                    return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16)]\n                }\n            }, {\n                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (t) {\n                    return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16)]\n                }\n            }, {\n                re: /hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n                space: \"hsla\",\n                parse: function (t) {\n                    return [t[1], t[2] / 100, t[3] / 100, t[4]]\n                }\n            }], h = t.Color = function (e, i, s, n) {\n                return new t.Color.fn.parse(e, i, s, n)\n            }, c = {\n                rgba: {\n                    props: {\n                        red: {idx: 0, type: \"byte\"},\n                        green: {idx: 1, type: \"byte\"},\n                        blue: {idx: 2, type: \"byte\"}\n                    }\n                },\n                hsla: {\n                    props: {\n                        hue: {idx: 0, type: \"degrees\"},\n                        saturation: {idx: 1, type: \"percent\"},\n                        lightness: {idx: 2, type: \"percent\"}\n                    }\n                }\n            }, u = {\"byte\": {floor: !0, max: 255}, percent: {max: 1}, degrees: {mod: 360, floor: !0}}, d = h.support = {},\n            p = t(\"<p>\")[0], f = t.each;\n        p.style.cssText = \"background-color:rgba(1,1,1,.5)\", d.rgba = p.style.backgroundColor.indexOf(\"rgba\") > -1, f(c, function (t, e) {\n            e.cache = \"_\" + t, e.props.alpha = {idx: 3, type: \"percent\", def: 1}\n        }), h.fn = t.extend(h.prototype, {\n            parse: function (n, a, r, l) {\n                if (n === e)return this._rgba = [null, null, null, null], this;\n                (n.jquery || n.nodeType) && (n = t(n).css(a), a = e);\n                var u = this, d = t.type(n), p = this._rgba = [];\n                return a !== e && (n = [n, a, r, l], d = \"array\"), \"string\" === d ? this.parse(s(n) || o._default) : \"array\" === d ? (f(c.rgba.props, function (t, e) {\n                    p[e.idx] = i(n[e.idx], e)\n                }), this) : \"object\" === d ? (n instanceof h ? f(c, function (t, e) {\n                    n[e.cache] && (u[e.cache] = n[e.cache].slice())\n                }) : f(c, function (e, s) {\n                    var o = s.cache;\n                    f(s.props, function (t, e) {\n                        if (!u[o] && s.to) {\n                            if (\"alpha\" === t || null == n[t])return;\n                            u[o] = s.to(u._rgba)\n                        }\n                        u[o][e.idx] = i(n[t], e, !0)\n                    }), u[o] && 0 > t.inArray(null, u[o].slice(0, 3)) && (u[o][3] = 1, s.from && (u._rgba = s.from(u[o])))\n                }), this) : e\n            }, is: function (t) {\n                var i = h(t), s = !0, n = this;\n                return f(c, function (t, o) {\n                    var a, r = i[o.cache];\n                    return r && (a = n[o.cache] || o.to && o.to(n._rgba) || [], f(o.props, function (t, i) {\n                        return null != r[i.idx] ? s = r[i.idx] === a[i.idx] : e\n                    })), s\n                }), s\n            }, _space: function () {\n                var t = [], e = this;\n                return f(c, function (i, s) {\n                    e[s.cache] && t.push(i)\n                }), t.pop()\n            }, transition: function (t, e) {\n                var s = h(t), n = s._space(), o = c[n], a = 0 === this.alpha() ? h(\"transparent\") : this,\n                    r = a[o.cache] || o.to(a._rgba), l = r.slice();\n                return s = s[o.cache], f(o.props, function (t, n) {\n                    var o = n.idx, a = r[o], h = s[o], c = u[n.type] || {};\n                    null !== h && (null === a ? l[o] = h : (c.mod && (h - a > c.mod / 2 ? a += c.mod : a - h > c.mod / 2 && (a -= c.mod)), l[o] = i((h - a) * e + a, n)))\n                }), this[n](l)\n            }, blend: function (e) {\n                if (1 === this._rgba[3])return this;\n                var i = this._rgba.slice(), s = i.pop(), n = h(e)._rgba;\n                return h(t.map(i, function (t, e) {\n                    return (1 - s) * n[e] + s * t\n                }))\n            }, toRgbaString: function () {\n                var e = \"rgba(\", i = t.map(this._rgba, function (t, e) {\n                    return null == t ? e > 2 ? 1 : 0 : t\n                });\n                return 1 === i[3] && (i.pop(), e = \"rgb(\"), e + i.join() + \")\"\n            }, toHslaString: function () {\n                var e = \"hsla(\", i = t.map(this.hsla(), function (t, e) {\n                    return null == t && (t = e > 2 ? 1 : 0), e && 3 > e && (t = Math.round(100 * t) + \"%\"), t\n                });\n                return 1 === i[3] && (i.pop(), e = \"hsl(\"), e + i.join() + \")\"\n            }, toHexString: function (e) {\n                var i = this._rgba.slice(), s = i.pop();\n                return e && i.push(~~(255 * s)), \"#\" + t.map(i, function (t) {\n                    return t = (t || 0).toString(16), 1 === t.length ? \"0\" + t : t\n                }).join(\"\")\n            }, toString: function () {\n                return 0 === this._rgba[3] ? \"transparent\" : this.toRgbaString()\n            }\n        }), h.fn.parse.prototype = h.fn, c.hsla.to = function (t) {\n            if (null == t[0] || null == t[1] || null == t[2])return [null, null, null, t[3]];\n            var e, i, s = t[0] / 255, n = t[1] / 255, o = t[2] / 255, a = t[3], r = Math.max(s, n, o),\n                l = Math.min(s, n, o), h = r - l, c = r + l, u = .5 * c;\n            return e = l === r ? 0 : s === r ? 60 * (n - o) / h + 360 : n === r ? 60 * (o - s) / h + 120 : 60 * (s - n) / h + 240, i = 0 === h ? 0 : .5 >= u ? h / c : h / (2 - c), [Math.round(e) % 360, i, u, null == a ? 1 : a]\n        }, c.hsla.from = function (t) {\n            if (null == t[0] || null == t[1] || null == t[2])return [null, null, null, t[3]];\n            var e = t[0] / 360, i = t[1], s = t[2], o = t[3], a = .5 >= s ? s * (1 + i) : s + i - s * i, r = 2 * s - a;\n            return [Math.round(255 * n(r, a, e + 1 / 3)), Math.round(255 * n(r, a, e)), Math.round(255 * n(r, a, e - 1 / 3)), o]\n        }, f(c, function (s, n) {\n            var o = n.props, a = n.cache, l = n.to, c = n.from;\n            h.fn[s] = function (s) {\n                if (l && !this[a] && (this[a] = l(this._rgba)), s === e)return this[a].slice();\n                var n, r = t.type(s), u = \"array\" === r || \"object\" === r ? s : arguments, d = this[a].slice();\n                return f(o, function (t, e) {\n                    var s = u[\"object\" === r ? t : e.idx];\n                    null == s && (s = d[e.idx]), d[e.idx] = i(s, e)\n                }), c ? (n = h(c(d)), n[a] = d, n) : h(d)\n            }, f(o, function (e, i) {\n                h.fn[e] || (h.fn[e] = function (n) {\n                    var o, a = t.type(n), l = \"alpha\" === e ? this._hsla ? \"hsla\" : \"rgba\" : s, h = this[l](),\n                        c = h[i.idx];\n                    return \"undefined\" === a ? c : (\"function\" === a && (n = n.call(this, c), a = t.type(n)), null == n && i.empty ? this : (\"string\" === a && (o = r.exec(n), o && (n = c + parseFloat(o[2]) * (\"+\" === o[1] ? 1 : -1))), h[i.idx] = n, this[l](h)))\n                })\n            })\n        }), h.hook = function (e) {\n            var i = e.split(\" \");\n            f(i, function (e, i) {\n                t.cssHooks[i] = {\n                    set: function (e, n) {\n                        var o, a, r = \"\";\n                        if (\"transparent\" !== n && (\"string\" !== t.type(n) || (o = s(n)))) {\n                            if (n = h(o || n), !d.rgba && 1 !== n._rgba[3]) {\n                                for (a = \"backgroundColor\" === i ? e.parentNode : e; (\"\" === r || \"transparent\" === r) && a && a.style;)try {\n                                    r = t.css(a, \"backgroundColor\"), a = a.parentNode\n                                } catch (l) {\n                                }\n                                n = n.blend(r && \"transparent\" !== r ? r : \"_default\")\n                            }\n                            n = n.toRgbaString()\n                        }\n                        try {\n                            e.style[i] = n\n                        } catch (l) {\n                        }\n                    }\n                }, t.fx.step[i] = function (e) {\n                    e.colorInit || (e.start = h(e.elem, i), e.end = h(e.end), e.colorInit = !0), t.cssHooks[i].set(e.elem, e.start.transition(e.end, e.pos))\n                }\n            })\n        }, h.hook(a), t.cssHooks.borderColor = {\n            expand: function (t) {\n                var e = {};\n                return f([\"Top\", \"Right\", \"Bottom\", \"Left\"], function (i, s) {\n                    e[\"border\" + s + \"Color\"] = t\n                }), e\n            }\n        }, o = t.Color.names = {\n            aqua: \"#00ffff\",\n            black: \"#000000\",\n            blue: \"#0000ff\",\n            fuchsia: \"#ff00ff\",\n            gray: \"#808080\",\n            green: \"#008000\",\n            lime: \"#00ff00\",\n            maroon: \"#800000\",\n            navy: \"#000080\",\n            olive: \"#808000\",\n            purple: \"#800080\",\n            red: \"#ff0000\",\n            silver: \"#c0c0c0\",\n            teal: \"#008080\",\n            white: \"#ffffff\",\n            yellow: \"#ffff00\",\n            transparent: [null, null, null, 0],\n            _default: \"#ffffff\"\n        }\n    }(n), function () {\n        function e(e) {\n            var i, s,\n                n = e.ownerDocument.defaultView ? e.ownerDocument.defaultView.getComputedStyle(e, null) : e.currentStyle,\n                o = {};\n            if (n && n.length && n[0] && n[n[0]])for (s = n.length; s--;)i = n[s], \"string\" == typeof n[i] && (o[t.camelCase(i)] = n[i]); else for (i in n)\"string\" == typeof n[i] && (o[i] = n[i]);\n            return o\n        }\n\n        function i(e, i) {\n            var s, n, a = {};\n            for (s in i)n = i[s], e[s] !== n && (o[s] || (t.fx.step[s] || !isNaN(parseFloat(n))) && (a[s] = n));\n            return a\n        }\n\n        var s = [\"add\", \"remove\", \"toggle\"], o = {\n            border: 1,\n            borderBottom: 1,\n            borderColor: 1,\n            borderLeft: 1,\n            borderRight: 1,\n            borderTop: 1,\n            borderWidth: 1,\n            margin: 1,\n            padding: 1\n        };\n        t.each([\"borderLeftStyle\", \"borderRightStyle\", \"borderBottomStyle\", \"borderTopStyle\"], function (e, i) {\n            t.fx.step[i] = function (t) {\n                (\"none\" !== t.end && !t.setAttr || 1 === t.pos && !t.setAttr) && (n.style(t.elem, i, t.end), t.setAttr = !0)\n            }\n        }), t.fn.addBack || (t.fn.addBack = function (t) {\n            return this.add(null == t ? this.prevObject : this.prevObject.filter(t))\n        }), t.effects.animateClass = function (n, o, a, r) {\n            var l = t.speed(o, a, r);\n            return this.queue(function () {\n                var o, a = t(this), r = a.attr(\"class\") || \"\", h = l.children ? a.find(\"*\").addBack() : a;\n                h = h.map(function () {\n                    var i = t(this);\n                    return {el: i, start: e(this)}\n                }), o = function () {\n                    t.each(s, function (t, e) {\n                        n[e] && a[e + \"Class\"](n[e])\n                    })\n                }, o(), h = h.map(function () {\n                    return this.end = e(this.el[0]), this.diff = i(this.start, this.end), this\n                }), a.attr(\"class\", r), h = h.map(function () {\n                    var e = this, i = t.Deferred(), s = t.extend({}, l, {\n                        queue: !1, complete: function () {\n                            i.resolve(e)\n                        }\n                    });\n                    return this.el.animate(this.diff, s), i.promise()\n                }), t.when.apply(t, h.get()).done(function () {\n                    o(), t.each(arguments, function () {\n                        var e = this.el;\n                        t.each(this.diff, function (t) {\n                            e.css(t, \"\")\n                        })\n                    }), l.complete.call(a[0])\n                })\n            })\n        }, t.fn.extend({\n            addClass: function (e) {\n                return function (i, s, n, o) {\n                    return s ? t.effects.animateClass.call(this, {add: i}, s, n, o) : e.apply(this, arguments)\n                }\n            }(t.fn.addClass), removeClass: function (e) {\n                return function (i, s, n, o) {\n                    return arguments.length > 1 ? t.effects.animateClass.call(this, {remove: i}, s, n, o) : e.apply(this, arguments)\n                }\n            }(t.fn.removeClass), toggleClass: function (e) {\n                return function (i, s, n, o, a) {\n                    return \"boolean\" == typeof s || void 0 === s ? n ? t.effects.animateClass.call(this, s ? {add: i} : {remove: i}, n, o, a) : e.apply(this, arguments) : t.effects.animateClass.call(this, {toggle: i}, s, n, o)\n                }\n            }(t.fn.toggleClass), switchClass: function (e, i, s, n, o) {\n                return t.effects.animateClass.call(this, {add: i, remove: e}, s, n, o)\n            }\n        })\n    }(), function () {\n        function n(e, i, s, n) {\n            return t.isPlainObject(e) && (i = e, e = e.effect), e = {effect: e}, null == i && (i = {}), t.isFunction(i) && (n = i, s = null, i = {}), (\"number\" == typeof i || t.fx.speeds[i]) && (n = s, s = i, i = {}), t.isFunction(s) && (n = s, s = null), i && t.extend(e, i), s = s || i.duration, e.duration = t.fx.off ? 0 : \"number\" == typeof s ? s : s in t.fx.speeds ? t.fx.speeds[s] : t.fx.speeds._default, e.complete = n || i.complete, e\n        }\n\n        function o(e) {\n            return !e || \"number\" == typeof e || t.fx.speeds[e] ? !0 : \"string\" != typeof e || t.effects.effect[e] ? t.isFunction(e) ? !0 : \"object\" != typeof e || e.effect ? !1 : !0 : !0\n        }\n\n        function a(t, e) {\n            var i = e.outerWidth(), s = e.outerHeight(),\n                n = /^rect\\((-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto)\\)$/,\n                o = n.exec(t) || [\"\", 0, i, s, 0];\n            return {\n                top: parseFloat(o[1]) || 0,\n                right: \"auto\" === o[2] ? i : parseFloat(o[2]),\n                bottom: \"auto\" === o[3] ? s : parseFloat(o[3]),\n                left: parseFloat(o[4]) || 0\n            }\n        }\n\n        t.expr && t.expr.filters && t.expr.filters.animated && (t.expr.filters.animated = function (e) {\n            return function (i) {\n                return !!t(i).data(s) || e(i)\n            }\n        }(t.expr.filters.animated)), t.uiBackCompat !== !1 && t.extend(t.effects, {\n            save: function (t, i) {\n                for (var s = 0, n = i.length; n > s; s++)null !== i[s] && t.data(e + i[s], t[0].style[i[s]])\n            }, restore: function (t, i) {\n                for (var s, n = 0, o = i.length; o > n; n++)null !== i[n] && (s = t.data(e + i[n]), t.css(i[n], s))\n            }, setMode: function (t, e) {\n                return \"toggle\" === e && (e = t.is(\":hidden\") ? \"show\" : \"hide\"), e\n            }, createWrapper: function (e) {\n                if (e.parent().is(\".ui-effects-wrapper\"))return e.parent();\n                var i = {width: e.outerWidth(!0), height: e.outerHeight(!0), \"float\": e.css(\"float\")},\n                    s = t(\"<div></div>\").addClass(\"ui-effects-wrapper\").css({\n                        fontSize: \"100%\",\n                        background: \"transparent\",\n                        border: \"none\",\n                        margin: 0,\n                        padding: 0\n                    }), n = {width: e.width(), height: e.height()}, o = document.activeElement;\n                try {\n                    o.id\n                } catch (a) {\n                    o = document.body\n                }\n                return e.wrap(s), (e[0] === o || t.contains(e[0], o)) && t(o).trigger(\"focus\"), s = e.parent(), \"static\" === e.css(\"position\") ? (s.css({position: \"relative\"}), e.css({position: \"relative\"})) : (t.extend(i, {\n                    position: e.css(\"position\"),\n                    zIndex: e.css(\"z-index\")\n                }), t.each([\"top\", \"left\", \"bottom\", \"right\"], function (t, s) {\n                    i[s] = e.css(s), isNaN(parseInt(i[s], 10)) && (i[s] = \"auto\")\n                }), e.css({\n                    position: \"relative\",\n                    top: 0,\n                    left: 0,\n                    right: \"auto\",\n                    bottom: \"auto\"\n                })), e.css(n), s.css(i).show()\n            }, removeWrapper: function (e) {\n                var i = document.activeElement;\n                return e.parent().is(\".ui-effects-wrapper\") && (e.parent().replaceWith(e), (e[0] === i || t.contains(e[0], i)) && t(i).trigger(\"focus\")), e\n            }\n        }), t.extend(t.effects, {\n            version: \"1.12.1\", define: function (e, i, s) {\n                return s || (s = i, i = \"effect\"), t.effects.effect[e] = s, t.effects.effect[e].mode = i, s\n            }, scaledDimensions: function (t, e, i) {\n                if (0 === e)return {height: 0, width: 0, outerHeight: 0, outerWidth: 0};\n                var s = \"horizontal\" !== i ? (e || 100) / 100 : 1, n = \"vertical\" !== i ? (e || 100) / 100 : 1;\n                return {\n                    height: t.height() * n,\n                    width: t.width() * s,\n                    outerHeight: t.outerHeight() * n,\n                    outerWidth: t.outerWidth() * s\n                }\n            }, clipToBox: function (t) {\n                return {\n                    width: t.clip.right - t.clip.left,\n                    height: t.clip.bottom - t.clip.top,\n                    left: t.clip.left,\n                    top: t.clip.top\n                }\n            }, unshift: function (t, e, i) {\n                var s = t.queue();\n                e > 1 && s.splice.apply(s, [1, 0].concat(s.splice(e, i))), t.dequeue()\n            }, saveStyle: function (t) {\n                t.data(i, t[0].style.cssText)\n            }, restoreStyle: function (t) {\n                t[0].style.cssText = t.data(i) || \"\", t.removeData(i)\n            }, mode: function (t, e) {\n                var i = t.is(\":hidden\");\n                return \"toggle\" === e && (e = i ? \"show\" : \"hide\"), (i ? \"hide\" === e : \"show\" === e) && (e = \"none\"), e\n            }, getBaseline: function (t, e) {\n                var i, s;\n                switch (t[0]) {\n                    case\"top\":\n                        i = 0;\n                        break;\n                    case\"middle\":\n                        i = .5;\n                        break;\n                    case\"bottom\":\n                        i = 1;\n                        break;\n                    default:\n                        i = t[0] / e.height\n                }\n                switch (t[1]) {\n                    case\"left\":\n                        s = 0;\n                        break;\n                    case\"center\":\n                        s = .5;\n                        break;\n                    case\"right\":\n                        s = 1;\n                        break;\n                    default:\n                        s = t[1] / e.width\n                }\n                return {x: s, y: i}\n            }, createPlaceholder: function (i) {\n                var s, n = i.css(\"position\"), o = i.position();\n                return i.css({\n                    marginTop: i.css(\"marginTop\"),\n                    marginBottom: i.css(\"marginBottom\"),\n                    marginLeft: i.css(\"marginLeft\"),\n                    marginRight: i.css(\"marginRight\")\n                }).outerWidth(i.outerWidth()).outerHeight(i.outerHeight()), /^(static|relative)/.test(n) && (n = \"absolute\", s = t(\"<\" + i[0].nodeName + \">\").insertAfter(i).css({\n                    display: /^(inline|ruby)/.test(i.css(\"display\")) ? \"inline-block\" : \"block\",\n                    visibility: \"hidden\",\n                    marginTop: i.css(\"marginTop\"),\n                    marginBottom: i.css(\"marginBottom\"),\n                    marginLeft: i.css(\"marginLeft\"),\n                    marginRight: i.css(\"marginRight\"),\n                    \"float\": i.css(\"float\")\n                }).outerWidth(i.outerWidth()).outerHeight(i.outerHeight()).addClass(\"ui-effects-placeholder\"), i.data(e + \"placeholder\", s)), i.css({\n                    position: n,\n                    left: o.left,\n                    top: o.top\n                }), s\n            }, removePlaceholder: function (t) {\n                var i = e + \"placeholder\", s = t.data(i);\n                s && (s.remove(), t.removeData(i))\n            }, cleanUp: function (e) {\n                t.effects.restoreStyle(e), t.effects.removePlaceholder(e)\n            }, setTransition: function (e, i, s, n) {\n                return n = n || {}, t.each(i, function (t, i) {\n                    var o = e.cssUnit(i);\n                    o[0] > 0 && (n[i] = o[0] * s + o[1])\n                }), n\n            }\n        }), t.fn.extend({\n            effect: function () {\n                function e(e) {\n                    function n() {\n                        l.removeData(s), t.effects.cleanUp(l), \"hide\" === i.mode && l.hide(), r()\n                    }\n\n                    function r() {\n                        t.isFunction(h) && h.call(l[0]), t.isFunction(e) && e()\n                    }\n\n                    var l = t(this);\n                    i.mode = u.shift(), t.uiBackCompat === !1 || a ? \"none\" === i.mode ? (l[c](), r()) : o.call(l[0], i, n) : (l.is(\":hidden\") ? \"hide\" === c : \"show\" === c) ? (l[c](), r()) : o.call(l[0], i, r)\n                }\n\n                var i = n.apply(this, arguments), o = t.effects.effect[i.effect], a = o.mode, r = i.queue,\n                    l = r || \"fx\", h = i.complete, c = i.mode, u = [], d = function (e) {\n                        var i = t(this), n = t.effects.mode(i, c) || a;\n                        i.data(s, !0), u.push(n), a && (\"show\" === n || n === a && \"hide\" === n) && i.show(), a && \"none\" === n || t.effects.saveStyle(i), t.isFunction(e) && e()\n                    };\n                return t.fx.off || !o ? c ? this[c](i.duration, h) : this.each(function () {\n                    h && h.call(this)\n                }) : r === !1 ? this.each(d).each(e) : this.queue(l, d).queue(l, e)\n            }, show: function (t) {\n                return function (e) {\n                    if (o(e))return t.apply(this, arguments);\n                    var i = n.apply(this, arguments);\n                    return i.mode = \"show\", this.effect.call(this, i)\n                }\n            }(t.fn.show), hide: function (t) {\n                return function (e) {\n                    if (o(e))return t.apply(this, arguments);\n                    var i = n.apply(this, arguments);\n                    return i.mode = \"hide\", this.effect.call(this, i)\n                }\n            }(t.fn.hide), toggle: function (t) {\n                return function (e) {\n                    if (o(e) || \"boolean\" == typeof e)return t.apply(this, arguments);\n                    var i = n.apply(this, arguments);\n                    return i.mode = \"toggle\", this.effect.call(this, i)\n                }\n            }(t.fn.toggle), cssUnit: function (e) {\n                var i = this.css(e), s = [];\n                return t.each([\"em\", \"px\", \"%\", \"pt\"], function (t, e) {\n                    i.indexOf(e) > 0 && (s = [parseFloat(i), e])\n                }), s\n            }, cssClip: function (t) {\n                return t ? this.css(\"clip\", \"rect(\" + t.top + \"px \" + t.right + \"px \" + t.bottom + \"px \" + t.left + \"px)\") : a(this.css(\"clip\"), this)\n            }, transfer: function (e, i) {\n                var s = t(this), n = t(e.to), o = \"fixed\" === n.css(\"position\"), a = t(\"body\"),\n                    r = o ? a.scrollTop() : 0, l = o ? a.scrollLeft() : 0, h = n.offset(),\n                    c = {top: h.top - r, left: h.left - l, height: n.innerHeight(), width: n.innerWidth()},\n                    u = s.offset(),\n                    d = t(\"<div class='ui-effects-transfer'></div>\").appendTo(\"body\").addClass(e.className).css({\n                        top: u.top - r,\n                        left: u.left - l,\n                        height: s.innerHeight(),\n                        width: s.innerWidth(),\n                        position: o ? \"fixed\" : \"absolute\"\n                    }).animate(c, e.duration, e.easing, function () {\n                        d.remove(), t.isFunction(i) && i()\n                    })\n            }\n        }), t.fx.step.clip = function (e) {\n            e.clipInit || (e.start = t(e.elem).cssClip(), \"string\" == typeof e.end && (e.end = a(e.end, e.elem)), e.clipInit = !0), t(e.elem).cssClip({\n                top: e.pos * (e.end.top - e.start.top) + e.start.top,\n                right: e.pos * (e.end.right - e.start.right) + e.start.right,\n                bottom: e.pos * (e.end.bottom - e.start.bottom) + e.start.bottom,\n                left: e.pos * (e.end.left - e.start.left) + e.start.left\n            })\n        }\n    }(), function () {\n        var e = {};\n        t.each([\"Quad\", \"Cubic\", \"Quart\", \"Quint\", \"Expo\"], function (t, i) {\n            e[i] = function (e) {\n                return Math.pow(e, t + 2)\n            }\n        }), t.extend(e, {\n            Sine: function (t) {\n                return 1 - Math.cos(t * Math.PI / 2)\n            }, Circ: function (t) {\n                return 1 - Math.sqrt(1 - t * t)\n            }, Elastic: function (t) {\n                return 0 === t || 1 === t ? t : -Math.pow(2, 8 * (t - 1)) * Math.sin((80 * (t - 1) - 7.5) * Math.PI / 15)\n            }, Back: function (t) {\n                return t * t * (3 * t - 2)\n            }, Bounce: function (t) {\n                for (var e, i = 4; ((e = Math.pow(2, --i)) - 1) / 11 > t;);\n                return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * e - 2) / 22 - t, 2)\n            }\n        }), t.each(e, function (e, i) {\n            t.easing[\"easeIn\" + e] = i, t.easing[\"easeOut\" + e] = function (t) {\n                return 1 - i(1 - t)\n            }, t.easing[\"easeInOut\" + e] = function (t) {\n                return .5 > t ? i(2 * t) / 2 : 1 - i(-2 * t + 2) / 2\n            }\n        })\n    }(), t.effects\n});","/**\n * CsDialog - Modal dialog script in vanilla JavaScript.\n *\n * @version 27-02-2020\n * @author Floris Weijenburg <https://github.com/Code-Stars>\n */\nvar CsDialog = function (config) {\n\n\tthis.id = 'cs-dialog-' + Date.now();\n\n\tthis.cloak = null;\n\tthis.activeDialog = null;\n\n\tthis.content = '';\n\tthis.footerText = '';\n\n\tthis.config = CsUtils.mergeOptions({\n\t\tdebug: false,\n\t\tcache: true,\n\t\tcloak: true,\n\t\tpadding: true,\n\t\tkeyboard: true,\n\t\tdialogLinks: true,\n\t\tposition: 'absolute',\n\t\tcloseOnCloakClick: true,\n\t\teffect: {\n\t\t\tfade: false\n\t\t}\n\t}, config);\n\n\tif (this.config.cloak) {\n\t\tthis.renderCloakHtml();\n\t}\n\n\tif (this.config.dialogLinks) {\n\t\tthis.dialogLinksHandler();\n\t}\n\n\tif (this.config.keyboard) {\n\t\tthis.keyboardHandler();\n\t}\n};\n\n/**\n * Bind events to the dialog links on the page.\n */\nCsDialog.prototype.dialogLinksHandler = function () {\n\n\tvar elements = document.querySelectorAll('[data-cs-dialog]');\n\n\tfor (var i = 0; i < elements.length; i++) {\n\n\t\tCsUtils.addEvent(elements[i], 'click', function (event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tvar target = (event.currentTarget) ? event.currentTarget : event.srcElement;\n\t\t\tvar type = target.getAttribute('data-cs-dialog');\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'partial':\n\t\t\t\t\tthis.partialHandler(target);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'hidden-element':\n\t\t\t\t\tthis.hiddenElementHandler(target);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'image':\n\t\t\t\t\tthis.imageHandler(target);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gallery':\n\t\t\t\t\tthis.galleryHandler(target);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}.bind(this));\n\t}\n};\n\n/**\n * Init keyboard actions for navigating\n * through gallery images and for closing the dialog.\n */\nCsDialog.prototype.keyboardHandler = function () {\n\tdocument.onkeydown = function (e) {\n\t\tswitch (e.keyCode) {\n\t\t\tcase 37:\n\t\t\t\tthis.switchImageHandler(null, 'backwards');\n\t\t\t\tbreak;\n\t\t\tcase 39:\n\t\t\t\tthis.switchImageHandler(null, 'forwards');\n\t\t\t\tbreak;\n\t\t\tcase 27:\n\t\t\t\tthis.closeDialog();\n\t\t\t\tbreak;\n\t\t}\n\t}.bind(this);\n};\n\n/**\n * Handles the 'partial' type dialogs.\n *\n * @param target {object}\n */\nCsDialog.prototype.partialHandler = function (target) {\n\tvar attributes = {\n\t\ttitle: target.getAttribute('data-title'),\n\t\turl: target.getAttribute('data-url')\n\t};\n\n\tif (attributes.url !== null && attributes.url !== '' && attributes.url !== 'javascript:' && attributes.url !== '#') {\n\t\tthis.openUrl(attributes.title, attributes.url);\n\t}\n};\n\n/**\n * Handles the 'hidden element' type dialogs.\n *\n * @param target {object}\n */\nCsDialog.prototype.hiddenElementHandler = function (target) {\n\n\tvar attributes = {\n\t\tid: target.getAttribute('data-id'),\n\t\ttitle: target.getAttribute('data-title')\n\t};\n\n\tif (attributes.id !== null) {\n\t\tvar hiddenContent = document.getElementById(attributes.id),\n\t\t\tcontent = document.createElement('div');\n\n\t\tcontent.appendChild(hiddenContent.firstChild.cloneNode(true));\n\n\t\tthis.content = content.innerHTML;\n\t\tthis.openDialog(attributes.title);\n\t}\n};\n\n/**\n * Handles the 'image' type dialogs.\n * By loading its content from an image src path.\n *\n * @param target {object}\n */\nCsDialog.prototype.imageHandler = function (target) {\n\n\tvar attr = {\n\t\ttitle: target.getAttribute('data-cs-title'),\n\t\timageUrl: target.getAttribute('data-cs-image-url')\n\t};\n\n\tthis.config.padding = false;\n\n\tif (attr.imageUrl !== null) {\n\t\tvar image = document.createElement('img');\n\n\t\timage.src = attr.imageUrl;\n\t\timage.className = 'cs-dialog__img';\n\n\t\tthis.content = image.outerHTML;\n\t\tthis.openDialog(attr.title);\n\t}\n};\n\n/**\n * Handles the 'gallery' type dialogs.\n * By loading its content from an image src path.\n *\n * @param target {object}\n */\nCsDialog.prototype.galleryHandler = function (target) {\n\n\tvar attr = {\n\t\ttitle: target.getAttribute('data-cs-title'),\n\t\timageUrl: target.getAttribute('data-cs-image-url'),\n\t\tindex: parseInt(target.getAttribute('data-cs-index'))\n\t};\n\n\t// disable dialog padding\n\tthis.config.padding = false;\n\n\tif (attr.imageUrl !== null) {\n\t\tvar image = document.createElement('img');\n\n\t\timage.src = attr.imageUrl;\n\t\timage.className = 'cs-dialog__img';\n\n\t\tvar container = document.createElement('div');\n\t\tcontainer.appendChild(image);\n\n\t\t// get gallery items\n\t\tvar gallery_items = document.querySelectorAll('[data-cs-dialog=\"gallery\"]');\n\t\tif (gallery_items.length > 1) {\n\n\t\t\tif (attr.index < gallery_items.length) {\n\t\t\t\tvar nextBtn = document.createElement('a');\n\t\t\t\tnextBtn.href = 'javascript:;';\n\t\t\t\tnextBtn.className = 'cs-dialog__nav cs-dialog__nav--next';\n\t\t\t\tnextBtn.setAttribute('data-cs-index', (attr.index + 1).toString());\n\n\t\t\t\tvar nextIcon = document.createElement('i');\n\t\t\t\tnextIcon.className = 'fas fa-angle-right';\n\t\t\t\tnextBtn.appendChild(nextIcon);\n\n\t\t\t\tCsUtils.addEvent(nextBtn, 'click', function (event) {\n\t\t\t\t\tthis.switchImageHandler(event, 1);\n\t\t\t\t}.bind(this));\n\n\t\t\t\tcontainer.appendChild(nextBtn);\n\t\t\t}\n\n\t\t\tif (attr.index > 1) {\n\t\t\t\tvar prevBtn = document.createElement('a');\n\t\t\t\tprevBtn.href = 'javascript:;';\n\t\t\t\tprevBtn.className = 'cs-dialog__nav cs-dialog__nav--previous';\n\t\t\t\tprevBtn.setAttribute('data-cs-index', (attr.index - 1).toString());\n\n\t\t\t\tvar prevIcon = document.createElement('i');\n\t\t\t\tprevIcon.className = 'fas fa-angle-left';\n\t\t\t\tprevBtn.appendChild(prevIcon);\n\n\t\t\t\tCsUtils.addEvent(prevBtn, 'click', function (event) {\n\t\t\t\t\tthis.switchImageHandler(event, -1);\n\t\t\t\t}.bind(this));\n\n\t\t\t\tcontainer.appendChild(prevBtn);\n\t\t\t}\n\t\t}\n\n\t\tthis.content = container;\n\n\t\tthis.openDialog(attr.title);\n\t}\n};\n\n/**\n * Switch image handler.\n *\n * We only fade once to open dialog, not when switching image.\n *\n * @param event\n * @param {string=} direction\n */\nCsDialog.prototype.switchImageHandler = function (event, direction) {\n\n\tvar target = null,\n\t\tnextElement = null,\n\t\tgalleryItems = document.querySelectorAll('[data-cs-dialog=\"gallery\"]');\n\n\tif (event) {\n\t\t// change image based on clicked nav button\n\t\ttarget = (event.currentTarget) ? event.currentTarget : event.srcElement;\n\t} else {\n\t\t// change image based on arrow keys\n\t\ttarget = (direction === 'backwards') ? this.activeDialog.getElementsByClassName('cs-dialog__nav--previous')[0] : this.activeDialog.getElementsByClassName('cs-dialog__nav--next')[0];\n\t}\n\n\tif (!target) {\n\t\treturn;\n\t}\n\n\tfor (var i = 0; i < galleryItems.length; i++) {\n\t\tvar index = galleryItems[i].getAttribute('data-cs-index');\n\t\tif (target.getAttribute('data-cs-index') === index) {\n\t\t\tnextElement = galleryItems[i];\n\t\t}\n\t}\n\n\tif (nextElement !== null) {\n\t\tvar cachedFade = this.config.effect.fade;\n\n\t\tthis.config.effect.fade = false;\n\t\tthis.galleryHandler(nextElement);\n\t\tthis.config.effect.fade = cachedFade;\n\t}\n};\n\n/**\n * Loads content or URL into a dialog.\n *\n * @param title {string}\n * @param url {string}\n * @param callback {function=}\n */\nCsDialog.prototype.openUrl = function (title, url, callback) {\n\tvar self = this;\n\n\tCsUtils.get(url).then(function (response) {\n\n\t\tself.content = response;\n\t\t// Re-position dialog after loading dynamic content.\n\t\tself.positionDialog();\n\t\tself.openDialog(title, callback);\n\n\t}).catch(function (err) {\n\t\tconsole.error(err);\n\t});\n};\n\n/**\n * Open dialog.\n *\n * @param title {string}\n * @param callback {function=}\n */\nCsDialog.prototype.openDialog = function (title, callback) {\n\n\tvar self = this;\n\tthis.title = title;\n\n\tif (typeof Promise === 'undefined') {\n\t\tCsUtils.waitForPolyfillsToLoad(function () {\n\t\t\tself.openDialog(title, callback);\n\t\t});\n\t\treturn;\n\t}\n\n\tif (!self.activeDialog) {\n\t\tself.renderDialog().then(function (dialog) {\n\n\t\t\tself.positionDialog();\n\n\t\t\tif (typeof callback === 'function')\n\t\t\t\tcallback();\n\t\t});\n\t} else {\n\t\tself.resetContent();\n\n\t\tself.updateActiveDialog().then(function () {\n\n\t\t\tself.positionDialog();\n\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Creates a new dialog DOM element.\n */\nCsDialog.prototype.renderDialog = function () {\n\n\tvar dialog = this.renderDialogHtml(),\n\t\tbody = document.getElementsByTagName('body')[0],\n\t\tobj = this,\n\t\tdelay = 0;\n\n\tif (obj.config.debug) {\n\t\tdelay = 500;\n\t}\n\n\tbody.appendChild(dialog);\n\n\tthis.activeDialog = dialog;\n\n\treturn Promise.all(\n\t\t[\n\t\t\tobj.showDialog(),\n\t\t\tobj.appendTitle(obj.title),\n\t\t\tobj.appendContent(obj.content, delay)\n\t\t]).then(function () {\n\t\treturn dialog;\n\t});\n};\n\n/**\n * Update cached dialog element in DOM.\n */\nCsDialog.prototype.updateActiveDialog = function () {\n\n\tvar obj = this,\n\t\tdelay = 0;\n\n\tif (obj.config.debug) {\n\t\tdelay = 500;\n\t}\n\n\treturn Promise.all(\n\t\t[\n\t\t\tthis.showDialog(),\n\t\t\tobj.appendTitle(obj.title),\n\t\t\tobj.appendContent(obj.content, delay)\n\t\t]\n\t).then(function () {\n\t\treturn obj.activeDialog;\n\t});\n};\n\n/**\n * Shows the dialog that exists in the DOM.\n * Based on the settings that were set.\n */\nCsDialog.prototype.showDialog = function () {\n\n\tvar dialog = this.activeDialog,\n\t\tself = this;\n\n\treturn new Promise(function (resolve, reject) {\n\n\t\tif (self.config.cloak) {\n\t\t\tself.openCloak();\n\t\t}\n\t\tself.positionDialog();\n\n\t\tdialog.style.display = 'block';\n\n\t\tif (!self.config.effect.fade) {\n\n\t\t\tCsUtils.runEmbeddedJs(dialog);\n\t\t\tdialog.style.opacity = '1';\n\n\t\t\tresolve();\n\t\t} else {\n\t\t\t// settings: fade\n\t\t\tCsUtils.fadeIn(dialog, function () {\n\n\t\t\t\tCsUtils.runEmbeddedJs(dialog);\n\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\t});\n};\n\n/**\n * Positions the dialog in the center of the screen.\n * Can be changed via the settings.\n */\nCsDialog.prototype.positionDialog = function () {\n\n\tvar positionTop = (window.pageYOffset || document.body.scrollTop) - (document.body.clientTop || 0),\n\t\tscreenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0),\n\t\tdialog = this.activeDialog;\n\n\tCsUtils.waitForElement(dialog, function () { // first wait content to be loaded in the DOM\n\n\t\tvar maxHeight = screenHeight - screenHeight / 10;\n\n\t\tdialog.style.height = 'auto';  // resets to default height\n\t\tdialog.style.overflowY = 'visible';\n\n\t\tif (dialog.offsetHeight > maxHeight) {\n\t\t\tdialog.style.overflowY = 'scroll';\n\t\t\tdialog.style.height = maxHeight + 'px';\n\t\t}\n\n\t\tif (this.config.position === 'fixed') {\n\t\t\tpositionTop = 0;\n\t\t\tdialog.style.position = 'fixed';\n\t\t}\n\n\t\tdialog.style.top = (positionTop + screenHeight / 2 - dialog.offsetHeight / 2) + 'px';\n\n\t\tif (this.config.debug) {\n\t\t\tconsole.log('dialog.offsetHeight: ' + dialog.offsetHeight);\n\t\t\tconsole.log('screenHeight: ' + screenHeight);\n\t\t\tconsole.log('positionTop: ' + positionTop);\n\t\t\tconsole.log('maxHeight: ' + maxHeight);\n\t\t}\n\n\t}.bind(this));\n};\n\n/**\n * Close dialog.\n */\nCsDialog.prototype.closeDialog = function () {\n\n\tvar dialog = this.activeDialog || null;\n\n\tif (typeof dialog !== 'undefined') {\n\n\t\tthis.activeDialog.style.display = 'none';\n\n\t\tif (!this.config.cache) {\n\n\t\t\tdialog.parentNode.removeChild(dialog);\n\n\t\t\tthis.activeDialog = null;\n\t\t}\n\t\tthis.closeCloak();\n\t}\n};\n\n/**\n * Open cloak.\n */\nCsDialog.prototype.openCloak = function () {\n\n\tvar screenHeight = Math.max(document.body.scrollHeight, document.body.offsetHeight,\n\t\tdocument.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);\n\n\tif (typeof this.cloak !== 'undefined') {\n\t\tthis.cloak.setAttribute('style', 'height: ' + screenHeight + 'px');\n\t\tthis.cloak.className = this.cloak.className.replace(/\\bhide\\b/g, '');\n\t}\n};\n\n/**\n * Close cloak.\n */\nCsDialog.prototype.closeCloak = function () {\n\n\tif (typeof this.cloak !== 'undefined') {\n\t\tif (this.cloak.className.indexOf('hide') === -1) {\n\t\t\tthis.cloak.className += ' hide';\n\t\t}\n\t}\n};\n\n/**\n * Append title to existing dialog DOM element.\n *\n * @param title {string}\n */\nCsDialog.prototype.appendTitle = function (title) {\n\tvar obj = this;\n\n\tif (typeof obj.activeDialog !== 'undefined') {\n\n\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\tvar headerElement = obj.activeDialog.getElementsByClassName('cs-dialog__header')[0],\n\t\t\t\ttitleElement;\n\n\t\t\tif (typeof headerElement !== 'undefined') {\n\n\t\t\t\ttitleElement = headerElement.getElementsByClassName('cs-dialog__title')[0];\n\t\t\t\ttitleElement.innerHTML = title;\n\t\t\t\tresolve();\n\n\t\t\t} else {\n\t\t\t\treject();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Append content to existing dialog DOM element.\n *\n * @param content {string}\n * @param delay\n */\nCsDialog.prototype.appendContent = function (content, delay) {\n\tdelay = delay || 0;\n\n\tvar obj = this;\n\n\tif (typeof obj.activeDialog !== 'undefined') {\n\n\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar container = obj.activeDialog.getElementsByClassName('cs-dialog__body')[0];\n\n\t\t\t\tif (typeof container !== 'undefined') {\n\t\t\t\t\tif (typeof content === 'object') {\n\t\t\t\t\t\tcontainer.innerHTML = '';\n\t\t\t\t\t\tcontainer.append(content);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontainer.innerHTML = content;\n\t\t\t\t\t}\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t}, delay);\n\t\t});\n\t}\n};\n\n/**\n * Resets the content of a cached dialog.\n */\nCsDialog.prototype.resetContent = function () {\n\n\tvar obj = this;\n\n\tvar container = obj.activeDialog.getElementsByClassName('cs-dialog__body')[0];\n\tcontainer.innerHTML = obj.renderSpinnerHtml();\n};\n\n/**\n * Render the HTML used for the dialog's cloak effect.\n */\nCsDialog.prototype.renderCloakHtml = function () {\n\n\tvar cloak = document.createElement('div'),\n\t\tbody = document.getElementsByTagName('body')[0];\n\n\tcloak.className = 'cs-dialog-cloak hide';\n\tbody.insertBefore(cloak, body.firstChild);\n\n\t// close dialog via cloak trigger\n\tif (this.config.closeOnCloakClick) {\n\t\tCsUtils.addEvent(cloak, 'click', function (event) {\n\t\t\tif (event.target !== this.activeDialog) {\n\t\t\t\tthis.closeDialog();\n\t\t\t}\n\t\t}.bind(this));\n\t}\n\n\tthis.cloak = cloak;\n\n\treturn cloak;\n};\n\n/**\n * Render the container HTML used by the dialog.\n * Content gets added later.\n *\n * @returns {Element}\n */\nCsDialog.prototype.renderDialogHtml = function () {\n\n\tvar container = document.createElement('div'),\n\t\tcontainerInner = document.createElement('div'),\n\t\tcontainerContent = document.createElement('div'),\n\t\theader = document.createElement('header'),\n\t\tfooter = document.createElement('footer');\n\n\tvar headerColumn1 = document.createElement('div'),\n\t\theaderColumn2 = document.createElement('div'),\n\t\theaderTitle = document.createElement('h2'),\n\t\theaderCloseBtn = document.createElement('a'),\n\t\theaderCloseIcon = document.createElement('i');\n\n\tcontainer.id = this.id;\n\tcontainer.className = 'cs-dialog extend hide';\n\n\tif (this.config.padding) {\n\t\tcontainer.className += ' cs-dialog--padding';\n\t}\n\n\tcontainerInner.className = 'cs-dialog__inner';\n\tcontainer.appendChild(containerInner);\n\n\theader.className = 'cs-dialog__header';\n\tcontainerInner.appendChild(header);\n\n\theaderColumn1.className = 'cs-dialog__container-master';\n\theader.appendChild(headerColumn1);\n\n\theaderTitle.className = 'cs-dialog__title';\n\theaderColumn1.appendChild(headerTitle);\n\n\theaderColumn2.className = 'cs-dialog__container-slave';\n\theaderColumn2.style.textAlign = 'right';\n\theader.appendChild(headerColumn2);\n\n\theaderCloseIcon.className = 'fas fa-times';\n\theaderCloseBtn.appendChild(headerCloseIcon);\n\n\theaderCloseBtn.href = 'JavaScript:;';\n\theaderCloseBtn.className = 'cs-dialog__close-btn';\n\theaderColumn2.appendChild(headerCloseBtn);\n\n\tCsUtils.addEvent(headerCloseBtn, 'click', this.closeDialog.bind(this));\n\n\tcontainerContent.className = 'cs-dialog__body';\n\tcontainerContent.innerHTML = this.renderSpinnerHtml();\n\tcontainerInner.appendChild(containerContent);\n\n\tif (this.footerText !== '') {\n\t\tfooter.className = 'cs-dialog__footer';\n\t\tfooter.innerHTML = this.footerText;\n\t\tcontainerInner.appendChild(footer);\n\t}\n\n\treturn container;\n};\n\n/**\n * Set footer text.\n *\n * @param text {string}\n */\nCsDialog.prototype.setFooterText = function (text) {\n\tthis.footerText = text;\n};\n\n/**\n * Load spinner HTML.\n *\n * @returns {string}\n */\nCsDialog.prototype.renderSpinnerHtml = function () {\n\treturn '<svg class=\"cs-dialog__spinner\" viewBox=\"0 0 100 100\" width=\"50\" height=\"50\"> ' +\n\t\t'<circle cx=\"50\" cy=\"50\" r=\"42\" transform=\"rotate(-90,50,50)\" />' +\n\t\t'</svg>';\n};\n\n/**\n * Opens dialog with given title and content.\n *\n * @param {string} title\n * @param {string} content\n * @param {function=} callback\n */\nCsDialog.prototype.openWithContent = function (title, content, callback) {\n\tthis.openDialog(title, function () {\n\t\tthis.appendContent(content).then(function (response) {\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t}.bind(this));\n};\n\n/**\n * CsUtils object.\n */\nvar CsUtils = {};\n\n/**\n * Checks if the current browser is Internet Explorer.\n *\n * @returns {boolean}\n */\nCsUtils.isIe = function () {\n    return window.navigator.userAgent.indexOf(\"MSIE \") > 0\n        || !!navigator.userAgent.match(/Trident.*rv\\:11\\./);\n};\n\n/**\n * Checks if the DOM is ready.\n *\n * @param callback {function}\n */\nCsUtils.isDomReady = function (callback) {\n    /in/.test(document.readyState) ? setTimeout(function () {\n        CsUtils.isDomReady(callback);\n    }, 10) : callback()\n};\n\n/**\n * Load polyfill if Promise object is not supported\n * as soon as the head tag is loaded.\n */\nCsUtils.loadPolyFills = function () {\n    if (typeof Promise === 'undefined' && document.getElementById('script-promise-polyfill') === null) {\n\n        CsUtils.waitForElement(document.getElementsByTagName('head')[0], function (head) {\n            var script = document.createElement(\"script\");\n\n            script.type = 'text/javascript';\n            script.src = 'https://cdn.jsdelivr.net' +\n                '/npm/promise-polyfill@8/dist/polyfill.min.js';\n            script.id = 'script-promise-polyfill';\n\n            head.insertBefore(script, head.firstChild);\n        });\n    }\n};\n\n/**\n * Wait for poly fill to load.\n *\n * @param callback {function}\n */\nCsUtils.waitForPolyfillsToLoad = function (callback) {\n    if (typeof Promise === 'undefined') {\n        CsUtils.loadPolyFills();\n        console.info('Waiting for Promise polyfill to load...');\n\n        setTimeout(function () {\n            CsUtils.waitForPolyfillsToLoad(callback);\n        }.bind(this), 50);\n\n    } else {\n        callback();\n    }\n};\n\n/**\n * Add event.\n *\n * @param obj {object}\n * @param type {string}\n * @param fn {function}\n */\nCsUtils.addEvent = function (obj, type, fn) {\n\n    if (obj.attachEvent) {\n        obj['e' + type + fn] = fn;\n        obj[type + fn] = function () {\n            obj['e' + type + fn](window.event);\n        };\n        obj.attachEvent('on' + type, obj[type + fn]);\n    } else\n        obj.addEventListener(type, fn, false);\n};\n\n/**\n * Performs a GET HTTP-request.\n *\n * @param url {string}\n */\nCsUtils.get = function (url) {\n\n    var requestPromise = new Promise(function (resolve, reject) {\n\n        var req = new XMLHttpRequest();\n        req.open('GET', url);\n        req.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n        req.onload = function () {\n            if (req.status === 200) {\n                resolve(req.response);\n            } else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.send();\n    });\n\n    return Promise.all([requestPromise]).then(function (results) {\n        return results[0];\n    });\n};\n\n/**\n * Wait for element.\n *\n * @param element\n * @param callback\n */\nCsUtils.waitForElement = function (element, callback) {\n    var ticks = setInterval(function () {\n        if (element) {\n            clearInterval(ticks);\n            callback(element);\n        }\n    }, 10);\n};\n\n/**\n * Fade's an element in.\n *\n * @param el {Element}\n * @param callback {function}\n */\nCsUtils.fadeIn = function (el, callback) {\n\n    el.style.opacity = 0;\n\n    var tick = function () {\n        el.style.opacity = +el.style.opacity + 0.05;\n\n        if (+el.style.opacity < 1) {\n            (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16)\n        } else {\n            if (typeof callback === 'function')\n                callback();\n        }\n    };\n    tick();\n};\n\n/**\n * Merge objects.\n *\n * @param obj1 {object}\n * @param obj2 {object}\n *\n * @returns {{}}\n */\nCsUtils.mergeOptions = function (obj1, obj2) {\n    var obj3 = {};\n\n    for (var attrName in obj1) {\n        if (obj1.hasOwnProperty(attrName)) {\n            obj3[attrName] = obj1[attrName];\n        }\n    }\n    for (var attrName2 in obj2) {\n        if (obj2.hasOwnProperty(attrName2)) {\n            obj3[attrName2] = obj2[attrName2];\n        }\n    }\n    return obj3;\n};\n\n/**\n * Run Javascript that is embedded in the dialog.\n *\n * @param {Element} container\n */\nCsUtils.runEmbeddedJs = function (container) {\n    if (typeof container !== 'undefined') {\n\n        var scripts = container.getElementsByTagName('script');\n\n        for (var i = 0; i < scripts.length; i++) {\n            eval(scripts[i].text);\n        }\n    }\n};","/* BG Srcset 1.0 */\n(function () {\n    'use strict';\n\n    var BgSrcset = function () {\n\n        this.called = false;\n        this.callonce = true;\n        this.compat();\n    };\n\n    BgSrcset.prototype.init = function (target, callback) {\n        //retina bool\n        this.retina = window.devicePixelRatio > 1;\n\n        //storage for our elements\n        this.elements = [];\n\n        //global onload callback for imagery\n        this.callback = typeof callback === 'function' ? callback : function () {\n        };\n\n        //window width, for responsive handling\n        this.curwidth = this.getWidth();\n\n        //get our input and turn it into an element list of some sort\n        var elems = this.gather(target);\n\n        //parse the element input\n        for (var i = 0, l = elems.length; i < l; i++) {\n            this.parse(elems[i]);\n        }\n\n        this.set();\n        this.resize();\n    };\n\n    /* -----------* /\n     Fix compatibility issues*\n     *only down to IE8\n     / *----------- */\n\n    BgSrcset.prototype.compat = function () {\n        var d = document;\n        /* check for getElementsByClassName */\n        if (typeof d.getElementsByClassName !== 'function') {\n            d.getElementsByClassName = function (str) {\n                return d.querySelectorAll('.' + str);\n            };\n        }\n\n        /* check for .trim() */\n        if (!String.prototype.trim) {\n            String.prototype.trim = function () {\n                return this.replace(/^\\s+|\\s+$/g, '');\n            };\n        }\n\n        /*------------------------* /\n         Check for Event Listener\n         / *------*/\n        if (!d.addEventListener) {\n            this.addEvent = function (elem, evName, fn) {\n                elem.attachEvent('on' + evName, function (e) {\n                    fn(e || window.event);\n                });\n            };\n        }\n\n    };\n\n    /* -----------* /\n     Gather elements\n     / *----------- */\n    BgSrcset.prototype.gather = function (target) {\n        var autotypes = ['HTMLCollection', 'NodeList'];\n        var e = target;\n        var type = (e.nodeType) ? 'Object' : Object.prototype.toString.call(e).replace(/^\\[object |\\]$/g, '');\n\n        var func = 'parse' + type;\n\n        if (autotypes.indexOf(type) > -1) {\n            return e;\n        }\n\n        if (this[func]) {\n            return this[func](e);\n        }\n\n        return [];\n    };\n\n    BgSrcset.prototype.parseObject = function (target) {\n        return (target.nodeType) ? [target] : [];\n    };\n\n    BgSrcset.prototype.parseArray = function (target) {\n        return target;\n    };\n\n    BgSrcset.prototype.parseString = function (target) {\n\n        var d = document;\n        var e = target.trim();\n        var sel = e[0];\n        var elems = [];\n\n        switch (true) {\n            /* class */\n            case sel === '.':\n                elems = d.getElementsByClassName(e.substring(1));\n                break;\n            /* id */\n            case sel === '#':\n                elems.push(d.getElementById(e.substring(1)));\n                break;\n            /* tag */\n            case /^[a-zA-Z]+$/.test(e):\n                elems = d.getElementsByTagName(e);\n                break;\n            /* unknown */\n            default:\n                elems = [];\n        }\n\n        return elems;\n    };\n\n    /* -----------* /\n     Parse datasrc\n     / *----------- */\n    BgSrcset.prototype.parse = function (obj) {\n        //our data to parase\n        var bgss = obj.getAttribute('data-bg-srcset');\n        /* exit if no attribute */\n        if (attr === null) {\n            return false;\n        }\n\n        /* create new element object */\n        this.elements.push({});\n\n        /* split up sets */\n        var set = bgss.split(',');\n        var attr = '';\n        var curelem = this.elements[this.elements.length - 1];\n\n\n        curelem.node = obj;\n        curelem.srcset = [];\n\n        /* loop through sets to define breakpoints */\n        for (var i = 0, l = set.length; i < l; i++) {\n            curelem.srcset.push({});\n            attr = set[i].trim();\n            var attrs = attr.split(' ');\n            var a;\n            var e;\n            var t;\n            /* since we can't know the order of the values, starting another loop */\n            for (var attrc = 0, attrl = attrs.length; attrc < attrl; attrc++) {\n                a = attrs[attrc];\n                e = curelem.srcset[i]; //current attribute\n                t = a.length - 1;\n                switch (true) {\n                    case a.trim() === \"\":\n                        //in case of extra white spaces\n                        continue;\n                    case a[t] !== 'w' && a[a.length - 1] !== 'x':\n                        e.src = a;\n                        break;\n                    case a[t] === 'w':\n                        e.width = parseInt(a.slice(0, -1));\n                        break;\n                    case a[t] === 'x':\n                        e.retina = ( parseInt(a.slice(0, -1)) > 1);\n                        break;\n                }\n                if (!e.width) {\n                    e.width = Number.POSITIVE_INFINITY;\n                } //set to the top\n                if (!e.retina) {\n                    e.retina = false;\n                }\n            }\n        }\n    };\n\n    /* -----------* /\n     Set image\n     / *----------- */\n    BgSrcset.prototype.set = function () {\n        for (var i = 0, l = this.elements.length; i < l; i++) {\n            this.setSingle(i);\n        }\n    };\n\n    BgSrcset.prototype.setSingle = function (id) {\n        var width = 0,\n            elem = this.elements[id],\n            comparray = [],\n            best = 0,\n            _this = this;\n\n        width = this.getWidth(); //elem.node.offsetWidth;\n\n        elem.srcset = elem.srcset.sort(dynamicSort(\"width\"));\n\n        for (var i = 0, l = elem.srcset.length; i < l; i++) {\n            if (elem.srcset[i].width < width) {\n                continue;\n            }\n            comparray.push(elem.srcset[i]);\n        }\n        if (comparray.length === 0) {\n            comparray.push(elem.srcset[elem.srcset.length - 1]);\n        }\n\n        best = comparray[0];\n\n        if (comparray.length > 1 && comparray[0].width === comparray[1].width) {\n            best = (comparray[0].retina !== this.retina) ? comparray[1] : comparray[0];\n        }\n\n        if (best.src !== undefined && best.src !== 'null') {\n            var img = new Image();\n            var done = false;\n\n            img.onload = img.onreadystatechange = function () {\n                if (!done && (!this.readyState ||\n                    this.readyState === \"loaded\" || this.readyState === \"complete\")) {\n                    done = true;\n\n                    elem.node.style.backgroundImage = \"url('\" + best.src + \"')\";\n\n                    /* only fire the callback on initial load, not resize events */\n                    if (!_this.called) {\n\n                        _this.callback(elem);\n                        _this.called = _this.callonce;\n\n                    }\n\n                }\n\n            };\n\n            img.src = best.src;\n        } else {\n            elem.node.style.backgroundImage = \"\";\n        }\n\n\n    };\n\n    /* -----------* /\n     Handle Resize\n     / *----------- */\n    BgSrcset.prototype.resize = function () {\n        var _this = this,\n            resizeTimer = setTimeout(function () {\n            }, 0);\n\n        this.addEvent(window, 'resize', function () {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(function () {\n                var w = _this.getWidth();\n                if (w !== _this.curwidth) {\n                    _this.curwidth = w;\n                    _this.set();\n                }\n            }, 250);\n        });\n    };\n\n    BgSrcset.prototype.addEvent = function (elem, evName, fn) {\n        elem.addEventListener(evName, fn, false);\n    };\n\n    BgSrcset.prototype.getWidth = function () {\n        var w, d, e, g;\n        w = window;\n        d = document;\n        e = d.documentElement;\n        g = d.getElementsByTagName('body')[0];\n\n        return w.innerWidth || e.clientWidth || g.clientWidth;\n    };\n\n    function dynamicSort(property) {\n        var sortOrder = 1;\n        if (property[0] === \"-\") {\n            sortOrder = -1;\n            property = property.substr(1);\n        }\n        return function (a, b) {\n            var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n            return result * sortOrder;\n        };\n    }\n\n    window.BgSrcset = BgSrcset;\n})();\n","/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.8.0\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n;(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this, dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>',\n                nextArrow: '<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return $('<button type=\"button\" />').text(i + 1);\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                focusOnChange: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnFocus: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                useTransform: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                scrolling: false,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                swiping: false,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.focussed = false;\n            _.interrupted = false;\n            _.hidden = 'hidden';\n            _.paused = true;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n            _.registerBreakpoints();\n            _.init(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.activateADA = function() {\n        var _ = this;\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n    };\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function() {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.getNavTarget = function() {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if ( asNavFor && asNavFor !== null ) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        return asNavFor;\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n\n        var _ = this,\n            asNavFor = _.getNavTarget();\n\n        if ( asNavFor !== null && typeof asNavFor === 'object' ) {\n            asNavFor.each(function() {\n                var target = $(this).slick('getSlick');\n                if(!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        if ( _.slideCount > _.options.slidesToShow ) {\n            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this,\n            slideTo = _.currentSlide + _.options.slidesToScroll;\n\n        if ( !_.paused && !_.interrupted && !_.focussed ) {\n\n            if ( _.options.infinite === false ) {\n\n                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n                    _.direction = 0;\n                }\n\n                else if ( _.direction === 0 ) {\n\n                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\n                    if ( _.currentSlide - 1 === 0 ) {\n                        _.direction = 1;\n                    }\n\n                }\n\n            }\n\n            _.slideHandler( slideTo );\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true ) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if( _.slideCount > _.options.slidesToShow ) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow\n                        .addClass('slick-disabled')\n                        .attr('aria-disabled', 'true');\n                }\n\n            } else {\n\n                _.$prevArrow.add( _.$nextArrow )\n\n                    .addClass('slick-hidden')\n                    .attr({\n                        'aria-disabled': 'true',\n                        'tabindex': '-1'\n                    });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dot;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$slider.addClass('slick-dotted');\n\n            dot = $('<ul />').addClass(_.options.dotsClass);\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n            }\n\n            _.$dots = dot.appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slider\n                .children( _.options.slide + ':not(.slick-cloned)')\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element)\n                .attr('data-slick-index', index)\n                .data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.buildRows = function() {\n\n        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if(_.options.rows > 0) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(\n                originalSlides.length / slidesPerSection\n            );\n\n            for(a = 0; a < numOfSlides; a++){\n                var slide = document.createElement('div');\n                for(b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for(c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.empty().append(newSlides);\n            _.$slider.children().children().children()\n                .css({\n                    'width':(100 / _.options.slidesPerRow) + '%',\n                    'display': 'inline-block'\n                });\n\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if ( _.options.responsive &&\n            _.options.responsive.length &&\n            _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if( !initial && triggerBreakpoint !== false ) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.currentTarget),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        if($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if(!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this,\n            navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots)\n                .off('click.slick', _.changeSlide)\n                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n            if (_.options.accessibility === true) {\n                _.$dots.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$slider.off('focus.slick blur.slick');\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);\n                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.cleanUpSlideEvents();\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.cleanUpSlideEvents = function() {\n\n        var _ = this;\n\n        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n    };\n\n    Slick.prototype.cleanUpRows = function() {\n\n        var _ = this, originalSlides;\n\n        if(_.options.rows > 0) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.empty().append(originalSlides);\n        }\n\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function(refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if ( _.$prevArrow && _.$prevArrow.length ) {\n\n            _.$prevArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.prevArrow )) {\n                _.$prevArrow.remove();\n            }\n        }\n\n        if ( _.$nextArrow && _.$nextArrow.length ) {\n\n            _.$nextArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.nextArrow )) {\n                _.$nextArrow.remove();\n            }\n        }\n\n\n        if (_.$slides) {\n\n            _.$slides\n                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n                .removeAttr('aria-hidden')\n                .removeAttr('data-slick-index')\n                .each(function(){\n                    $(this).attr('style', $(this).data('originalStyling'));\n                });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n        _.$slider.removeClass('slick-dotted');\n\n        _.unslicked = true;\n\n        if(!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.fadeSlideOut = function(slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.$slidesCache = _.$slides;\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.focusHandler = function() {\n\n        var _ = this;\n\n        _.$slider\n            .off('focus.slick blur.slick')\n            .on('focus.slick blur.slick', '*', function(event) {\n\n            event.stopImmediatePropagation();\n            var $sf = $(this);\n\n            setTimeout(function() {\n\n                if( _.options.pauseOnFocus ) {\n                    _.focussed = $sf.is(':focus');\n                    _.autoPlay();\n                }\n\n            }, 0);\n\n        });\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            if (_.slideCount <= _.options.slidesToShow) {\n                 ++pagerQty;\n            } else {\n                while (breakPoint < _.slideCount) {\n                    ++pagerQty;\n                    breakPoint = counter + _.options.slidesToScroll;\n                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n                }\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else if(!_.options.asNavFor) {\n            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n        }else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide,\n            coef;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                coef = -1\n\n                if (_.options.vertical === true && _.options.centerMode === true) {\n                    if (_.options.slidesToShow === 2) {\n                        coef = -1.5;\n                    } else if (_.options.slidesToShow === 1) {\n                        coef = -2\n                    }\n                }\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);\n        } else if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            if (_.options.rtl === true) {\n                if (targetSlide[0]) {\n                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                } else {\n                    targetLeft =  0;\n                }\n            } else {\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n            }\n\n            if (_.options.centerMode === true) {\n                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n\n                if (_.options.rtl === true) {\n                    if (targetSlide[0]) {\n                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                    } else {\n                        targetLeft =  0;\n                    }\n                } else {\n                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                }\n\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this,\n            slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide) {\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function(creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n            _.checkResponsive(true);\n            _.focusHandler();\n\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n\n        if ( _.options.autoplay ) {\n\n            _.paused = false;\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.initADA = function() {\n        var _ = this,\n                numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),\n                tabControlIndexes = _.getNavigableIndexes().filter(function(val) {\n                    return (val >= 0) && (val < _.slideCount);\n                });\n\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        if (_.$dots !== null) {\n            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n                var slideControlIndex = tabControlIndexes.indexOf(i);\n\n                $(this).attr({\n                    'role': 'tabpanel',\n                    'id': 'slick-slide' + _.instanceUid + i,\n                    'tabindex': -1\n                });\n\n                if (slideControlIndex !== -1) {\n                   var ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex\n                   if ($('#' + ariaButtonControl).length) {\n                     $(this).attr({\n                         'aria-describedby': ariaButtonControl\n                     });\n                   }\n                }\n            });\n\n            _.$dots.attr('role', 'tablist').find('li').each(function(i) {\n                var mappedSlideIndex = tabControlIndexes[i];\n\n                $(this).attr({\n                    'role': 'presentation'\n                });\n\n                $(this).find('button').first().attr({\n                    'role': 'tab',\n                    'id': 'slick-slide-control' + _.instanceUid + i,\n                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,\n                    'aria-label': (i + 1) + ' of ' + numDotGroups,\n                    'aria-selected': null,\n                    'tabindex': '-1'\n                });\n\n            }).eq(_.currentSlide).find('button').attr({\n                'aria-selected': 'true',\n                'tabindex': '0'\n            }).end();\n        }\n\n        for (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {\n          if (_.options.focusOnChange) {\n            _.$slides.eq(i).attr({'tabindex': '0'});\n          } else {\n            _.$slides.eq(i).removeAttr('tabindex');\n          }\n        }\n\n        _.activateADA();\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'previous'\n               }, _.changeSlide);\n            _.$nextArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'next'\n               }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow.on('keydown.slick', _.keyHandler);\n                _.$nextArrow.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$dots.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {\n\n            $('li', _.$dots)\n                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initSlideEvents = function() {\n\n        var _ = this;\n\n        if ( _.options.pauseOnHover ) {\n\n            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n        _.initSlideEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(_.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n         //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'next' :  'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'previous' : 'next'\n                    }\n                });\n            }\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n\n            $('img[data-lazy]', imagesScope).each(function() {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageSrcSet = $(this).attr('data-srcset'),\n                    imageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function() {\n\n                    image\n                        .animate({ opacity: 0 }, 100, function() {\n\n                            if (imageSrcSet) {\n                                image\n                                    .attr('srcset', imageSrcSet );\n\n                                if (imageSizes) {\n                                    image\n                                        .attr('sizes', imageSizes );\n                                }\n                            }\n\n                            image\n                                .attr('src', imageSource)\n                                .animate({ opacity: 1 }, 200, function() {\n                                    image\n                                        .removeAttr('data-lazy data-srcset data-sizes')\n                                        .removeClass('slick-loading');\n                                });\n                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n                        });\n\n                };\n\n                imageToLoad.onerror = function() {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                };\n\n                imageToLoad.src = imageSource;\n\n            });\n\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n\n        if (_.options.lazyLoad === 'anticipated') {\n            var prevSlide = rangeStart - 1,\n                nextSlide = rangeEnd,\n                $slides = _.$slider.find('.slick-slide');\n\n            for (var i = 0; i < _.options.slidesToScroll; i++) {\n                if (prevSlide < 0) prevSlide = _.slideCount - 1;\n                loadRange = loadRange.add($slides.eq(prevSlide));\n                loadRange = loadRange.add($slides.eq(nextSlide));\n                prevSlide--;\n                nextSlide++;\n            }\n        }\n\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.orientationChange = function() {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.autoPlay();\n        _.options.autoplay = true;\n        _.paused = false;\n        _.focussed = false;\n        _.interrupted = false;\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        if( !_.unslicked ) {\n\n            _.$slider.trigger('afterChange', [_, index]);\n\n            _.animating = false;\n\n            if (_.slideCount > _.options.slidesToShow) {\n                _.setPosition();\n            }\n\n            _.swipeLeft = null;\n\n            if ( _.options.autoplay ) {\n                _.autoPlay();\n            }\n\n            if (_.options.accessibility === true) {\n                _.initADA();\n\n                if (_.options.focusOnChange) {\n                    var $currentSlide = $(_.$slides.get(_.currentSlide));\n                    $currentSlide.attr('tabindex', 0).focus();\n                }\n            }\n\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.preventDefault = function(event) {\n\n        event.preventDefault();\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n        tryCount = tryCount || 1;\n\n        var _ = this,\n            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n            image,\n            imageSource,\n            imageSrcSet,\n            imageSizes,\n            imageToLoad;\n\n        if ( $imgsToLoad.length ) {\n\n            image = $imgsToLoad.first();\n            imageSource = image.attr('data-lazy');\n            imageSrcSet = image.attr('data-srcset');\n            imageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');\n            imageToLoad = document.createElement('img');\n\n            imageToLoad.onload = function() {\n\n                if (imageSrcSet) {\n                    image\n                        .attr('srcset', imageSrcSet );\n\n                    if (imageSizes) {\n                        image\n                            .attr('sizes', imageSizes );\n                    }\n                }\n\n                image\n                    .attr( 'src', imageSource )\n                    .removeAttr('data-lazy data-srcset data-sizes')\n                    .removeClass('slick-loading');\n\n                if ( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n\n                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n                _.progressiveLazyLoad();\n\n            };\n\n            imageToLoad.onerror = function() {\n\n                if ( tryCount < 3 ) {\n\n                    /**\n                     * try to load the image 3 times,\n                     * leave a slight delay so we don't get\n                     * servers blocking the request.\n                     */\n                    setTimeout( function() {\n                        _.progressiveLazyLoad( tryCount + 1 );\n                    }, 500 );\n\n                } else {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                    _.progressiveLazyLoad();\n\n                }\n\n            };\n\n            imageToLoad.src = imageSource;\n\n        } else {\n\n            _.$slider.trigger('allImagesLoaded', [ _ ]);\n\n        }\n\n    };\n\n    Slick.prototype.refresh = function( initializing ) {\n\n        var _ = this, currentSlide, lastVisibleIndex;\n\n        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n        // in non-infinite sliders, we don't want to go past the\n        // last visible index.\n        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n            _.currentSlide = lastVisibleIndex;\n        }\n\n        // if less slides than to show, go to start.\n        if ( _.slideCount <= _.options.slidesToShow ) {\n            _.currentSlide = 0;\n\n        }\n\n        currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if( !initializing ) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n\n        }\n\n    };\n\n    Slick.prototype.registerBreakpoints = function() {\n\n        var _ = this, breakpoint, currentBreakpoint, l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for ( breakpoint in responsiveSettings ) {\n\n                l = _.breakpoints.length-1;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while( l >= 0 ) {\n                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n                            _.breakpoints.splice(l,1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n                }\n\n            }\n\n            _.breakpoints.sort(function(a, b) {\n                return ( _.options.mobileFirst ) ? a-b : b-a;\n            });\n\n        }\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slideTrack\n                .children(_.options.slide)\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n        _.cleanUpSlideEvents();\n        _.initSlideEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        _.setPosition();\n        _.focusHandler();\n\n        _.paused = !_.options.autoplay;\n        _.autoPlay();\n\n        _.$slider.trigger('reInit', [_]);\n\n    };\n\n    Slick.prototype.resize = function() {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function() {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if( !_.unslicked ) { _.setPosition(); }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {},\n            x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption =\n    Slick.prototype.slickSetOption = function() {\n\n        /**\n         * accepts arguments in format of:\n         *\n         *  - for changing a single option's value:\n         *     .slick(\"setOption\", option, value, refresh )\n         *\n         *  - for changing a set of responsive options:\n         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n         *\n         *  - for updating multiple values at once (not responsive)\n         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n         */\n\n        var _ = this, l, item, option, value, refresh = false, type;\n\n        if( $.type( arguments[0] ) === 'object' ) {\n\n            option =  arguments[0];\n            refresh = arguments[1];\n            type = 'multiple';\n\n        } else if ( $.type( arguments[0] ) === 'string' ) {\n\n            option =  arguments[0];\n            value = arguments[1];\n            refresh = arguments[2];\n\n            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n                type = 'responsive';\n\n            } else if ( typeof arguments[1] !== 'undefined' ) {\n\n                type = 'single';\n\n            }\n\n        }\n\n        if ( type === 'single' ) {\n\n            _.options[option] = value;\n\n\n        } else if ( type === 'multiple' ) {\n\n            $.each( option , function( opt, val ) {\n\n                _.options[opt] = val;\n\n            });\n\n\n        } else if ( type === 'responsive' ) {\n\n            for ( item in value ) {\n\n                if( $.type( _.options.responsive ) !== 'array' ) {\n\n                    _.options.responsive = [ value[item] ];\n\n                } else {\n\n                    l = _.options.responsive.length-1;\n\n                    // loop through the responsive object and splice out duplicates.\n                    while( l >= 0 ) {\n\n                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n                            _.options.responsive.splice(l,1);\n\n                        }\n\n                        l--;\n\n                    }\n\n                    _.options.responsive.push( value[item] );\n\n                }\n\n            }\n\n        }\n\n        if ( refresh ) {\n\n            _.unload();\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if ( _.options.fade ) {\n            if ( typeof _.options.zIndex === 'number' ) {\n                if( _.options.zIndex < 3 ) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        allSlides = _.$slider\n            .find('.slick-slide')\n            .removeClass('slick-active slick-center slick-current')\n            .attr('aria-hidden', 'true');\n\n        _.$slides\n            .eq(index)\n            .addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n                    _.$slides\n                        .slice(index - centerOffset + evenCoef, index + centerOffset + 1)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides\n                        .slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n                if (index === 0) {\n\n                    allSlides\n                        .eq(allSlides.length - 1 - _.options.slidesToShow)\n                        .addClass('slick-center');\n\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides\n                        .eq(_.options.slidesToShow)\n                        .addClass('slick-center');\n\n                }\n\n            }\n\n            _.$slides\n                .eq(index)\n                .addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n                _.$slides\n                    .slice(index, index + _.options.slidesToShow)\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n                    allSlides\n                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    allSlides\n                        .slice(indexOffset, indexOffset + _.options.slidesToShow)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {\n            _.lazyLoad();\n        }\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                        infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex - _.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount  + _.slideCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex + _.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.interrupt = function( toggle ) {\n\n        var _ = this;\n\n        if( !toggle ) {\n            _.autoPlay();\n        }\n        _.interrupted = toggle;\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n\n        var targetElement =\n            $(event.target).is('.slick-slide') ?\n                $(event.target) :\n                $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.slideHandler(index, false, true);\n            return;\n\n        }\n\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this, navTarget;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if ( _.options.autoplay ) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        if ( _.options.asNavFor ) {\n\n            navTarget = _.getNavTarget();\n            navTarget = navTarget.slick('getSlick');\n\n            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n                navTarget.setSlideClasses(_.currentSlide);\n            }\n\n        }\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n        if (_.options.verticalSwiping === true) {\n            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n                return 'down';\n            } else {\n                return 'up';\n            }\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this,\n            slideCount,\n            direction;\n\n        _.dragging = false;\n        _.swiping = false;\n\n        if (_.scrolling) {\n            _.scrolling = false;\n            return false;\n        }\n\n        _.interrupted = false;\n        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n        if ( _.touchObject.curX === undefined ) {\n            return false;\n        }\n\n        if ( _.touchObject.edgeHit === true ) {\n            _.$slider.trigger('edge', [_, _.swipeDirection() ]);\n        }\n\n        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n            direction = _.swipeDirection();\n\n            switch ( direction ) {\n\n                case 'left':\n                case 'down':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n                            _.currentSlide + _.getSlideCount();\n\n                    _.currentDirection = 0;\n\n                    break;\n\n                case 'right':\n                case 'up':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n                            _.currentSlide - _.getSlideCount();\n\n                    _.currentDirection = 1;\n\n                    break;\n\n                default:\n\n\n            }\n\n            if( direction != 'vertical' ) {\n\n                _.slideHandler( slideCount );\n                _.touchObject = {};\n                _.$slider.trigger('swipe', [_, direction ]);\n\n            }\n\n        } else {\n\n            if ( _.touchObject.startX !== _.touchObject.curX ) {\n\n                _.slideHandler( _.currentSlide );\n                _.touchObject = {};\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options\n                .touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        verticalSwipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n\n        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {\n            _.scrolling = true;\n            return false;\n        }\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = verticalSwipeLength;\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            _.swiping = true;\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        _.interrupted = true;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides\n            .removeClass('slick-slide slick-active slick-visible slick-current')\n            .attr('aria-hidden', 'true')\n            .css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function(fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if ( _.options.arrows === true &&\n            _.slideCount > _.options.slidesToShow &&\n            !_.options.infinite ) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots\n                .find('li')\n                    .removeClass('slick-active')\n                    .end();\n\n            _.$dots\n                .find('li')\n                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n                .addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if ( _.options.autoplay ) {\n\n            if ( document[_.hidden] ) {\n\n                _.interrupted = true;\n\n            } else {\n\n                _.interrupted = false;\n\n            }\n\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick = new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n","/*!\n * parallax.js v1.5.0 (http://pixelcog.github.io/parallax.js/)\n * @copyright 2016 PixelCog, Inc.\n * @license MIT (https://github.com/pixelcog/parallax.js/blob/master/LICENSE)\n */\n\n;(function ( $, window, document, undefined ) {\n\n  // Polyfill for requestAnimationFrame\n  // via: https://gist.github.com/paulirish/1579671\n\n  (function() {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n      window.requestAnimationFrame = function(callback) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n          timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n\n    if (!window.cancelAnimationFrame)\n      window.cancelAnimationFrame = function(id) {\n        clearTimeout(id);\n      };\n  }());\n\n\n  // Parallax Constructor\n\n  function Parallax(element, options) {\n    var self = this;\n\n    if (typeof options == 'object') {\n      delete options.refresh;\n      delete options.render;\n      $.extend(this, options);\n    }\n\n    this.$element = $(element);\n\n    if (!this.imageSrc && this.$element.is('img')) {\n      this.imageSrc = this.$element.attr('src');\n    }\n\n    var positions = (this.position + '').toLowerCase().match(/\\S+/g) || [];\n\n    if (positions.length < 1) {\n      positions.push('center');\n    }\n    if (positions.length == 1) {\n      positions.push(positions[0]);\n    }\n\n    if (positions[0] == 'top' || positions[0] == 'bottom' || positions[1] == 'left' || positions[1] == 'right') {\n      positions = [positions[1], positions[0]];\n    }\n\n    if (this.positionX !== undefined) positions[0] = this.positionX.toLowerCase();\n    if (this.positionY !== undefined) positions[1] = this.positionY.toLowerCase();\n\n    self.positionX = positions[0];\n    self.positionY = positions[1];\n\n    if (this.positionX != 'left' && this.positionX != 'right') {\n      if (isNaN(parseInt(this.positionX))) {\n        this.positionX = 'center';\n      } else {\n        this.positionX = parseInt(this.positionX);\n      }\n    }\n\n    if (this.positionY != 'top' && this.positionY != 'bottom') {\n      if (isNaN(parseInt(this.positionY))) {\n        this.positionY = 'center';\n      } else {\n        this.positionY = parseInt(this.positionY);\n      }\n    }\n\n    this.position =\n      this.positionX + (isNaN(this.positionX)? '' : 'px') + ' ' +\n      this.positionY + (isNaN(this.positionY)? '' : 'px');\n\n    if (navigator.userAgent.match(/(iPod|iPhone|iPad)/)) {\n      if (this.imageSrc && this.iosFix && !this.$element.is('img')) {\n        this.$element.css({\n          backgroundImage: 'url(' + this.imageSrc + ')',\n          backgroundSize: 'cover',\n          backgroundPosition: this.position\n        });\n      }\n      return this;\n    }\n\n    if (navigator.userAgent.match(/(Android)/)) {\n      if (this.imageSrc && this.androidFix && !this.$element.is('img')) {\n        this.$element.css({\n          backgroundImage: 'url(' + this.imageSrc + ')',\n          backgroundSize: 'cover',\n          backgroundPosition: this.position\n        });\n      }\n      return this;\n    }\n\n    this.$mirror = $('<div />').prependTo(this.mirrorContainer);\n\n    var slider = this.$element.find('>.parallax-slider');\n    var sliderExisted = false;\n\n    if (slider.length == 0)\n      this.$slider = $('<img />').prependTo(this.$mirror);\n    else {\n      this.$slider = slider.prependTo(this.$mirror)\n      sliderExisted = true;\n    }\n\n    this.$mirror.addClass('parallax-mirror').css({\n      visibility: 'hidden',\n      zIndex: this.zIndex,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      overflow: 'hidden'\n    });\n\n    this.$slider.addClass('parallax-slider').one('load', function() {\n      if (!self.naturalHeight || !self.naturalWidth) {\n        self.naturalHeight = this.naturalHeight || this.height || 1;\n        self.naturalWidth  = this.naturalWidth  || this.width  || 1;\n      }\n      self.aspectRatio = self.naturalWidth / self.naturalHeight;\n\n      Parallax.isSetup || Parallax.setup();\n      Parallax.sliders.push(self);\n      Parallax.isFresh = false;\n      Parallax.requestRender();\n    });\n\n    if (!sliderExisted)\n      this.$slider[0].src = this.imageSrc;\n\n    if (this.naturalHeight && this.naturalWidth || this.$slider[0].complete || slider.length > 0) {\n      this.$slider.trigger('load');\n    }\n\n  }\n\n\n  // Parallax Instance Methods\n\n  $.extend(Parallax.prototype, {\n    speed:    0.2,\n    bleed:    0,\n    zIndex:   -100,\n    iosFix:   true,\n    androidFix: true,\n    position: 'center',\n    overScrollFix: false,\n    mirrorContainer: 'body',\n\n    refresh: function() {\n      this.boxWidth        = this.$element.outerWidth();\n      this.boxHeight       = this.$element.outerHeight() + this.bleed * 2;\n      this.boxOffsetTop    = this.$element.offset().top - this.bleed;\n      this.boxOffsetLeft   = this.$element.offset().left;\n      this.boxOffsetBottom = this.boxOffsetTop + this.boxHeight;\n\n      var winHeight = Parallax.winHeight;\n      var docHeight = Parallax.docHeight;\n      var maxOffset = Math.min(this.boxOffsetTop, docHeight - winHeight);\n      var minOffset = Math.max(this.boxOffsetTop + this.boxHeight - winHeight, 0);\n      var imageHeightMin = this.boxHeight + (maxOffset - minOffset) * (1 - this.speed) | 0;\n      var imageOffsetMin = (this.boxOffsetTop - maxOffset) * (1 - this.speed) | 0;\n      var margin;\n\n      if (imageHeightMin * this.aspectRatio >= this.boxWidth) {\n        this.imageWidth    = imageHeightMin * this.aspectRatio | 0;\n        this.imageHeight   = imageHeightMin;\n        this.offsetBaseTop = imageOffsetMin;\n\n        margin = this.imageWidth - this.boxWidth;\n\n        if (this.positionX == 'left') {\n          this.offsetLeft = 0;\n        } else if (this.positionX == 'right') {\n          this.offsetLeft = - margin;\n        } else if (!isNaN(this.positionX)) {\n          this.offsetLeft = Math.max(this.positionX, - margin);\n        } else {\n          this.offsetLeft = - margin / 2 | 0;\n        }\n      } else {\n        this.imageWidth    = this.boxWidth;\n        this.imageHeight   = this.boxWidth / this.aspectRatio | 0;\n        this.offsetLeft    = 0;\n\n        margin = this.imageHeight - imageHeightMin;\n\n        if (this.positionY == 'top') {\n          this.offsetBaseTop = imageOffsetMin;\n        } else if (this.positionY == 'bottom') {\n          this.offsetBaseTop = imageOffsetMin - margin;\n        } else if (!isNaN(this.positionY)) {\n          this.offsetBaseTop = imageOffsetMin + Math.max(this.positionY, - margin);\n        } else {\n          this.offsetBaseTop = imageOffsetMin - margin / 2 | 0;\n        }\n      }\n    },\n\n    render: function() {\n      var scrollTop    = Parallax.scrollTop;\n      var scrollLeft   = Parallax.scrollLeft;\n      var overScroll   = this.overScrollFix ? Parallax.overScroll : 0;\n      var scrollBottom = scrollTop + Parallax.winHeight;\n\n      if (this.boxOffsetBottom > scrollTop && this.boxOffsetTop <= scrollBottom) {\n        this.visibility = 'visible';\n        this.mirrorTop = this.boxOffsetTop  - scrollTop;\n        this.mirrorLeft = this.boxOffsetLeft - scrollLeft;\n        this.offsetTop = this.offsetBaseTop - this.mirrorTop * (1 - this.speed);\n      } else {\n        this.visibility = 'hidden';\n      }\n\n      this.$mirror.css({\n        transform: 'translate3d('+this.mirrorLeft+'px, '+(this.mirrorTop - overScroll)+'px, 0px)',\n        visibility: this.visibility,\n        height: this.boxHeight,\n        width: this.boxWidth\n      });\n\n      this.$slider.css({\n        transform: 'translate3d('+this.offsetLeft+'px, '+this.offsetTop+'px, 0px)',\n        position: 'absolute',\n        height: this.imageHeight,\n        width: this.imageWidth,\n        maxWidth: 'none'\n      });\n    }\n  });\n\n\n  // Parallax Static Methods\n\n  $.extend(Parallax, {\n    scrollTop:    0,\n    scrollLeft:   0,\n    winHeight:    0,\n    winWidth:     0,\n    docHeight:    1 << 30,\n    docWidth:     1 << 30,\n    sliders:      [],\n    isReady:      false,\n    isFresh:      false,\n    isBusy:       false,\n\n    setup: function() {\n      if (this.isReady) return;\n\n      var self = this;\n\n      var $doc = $(document), $win = $(window);\n\n      var loadDimensions = function() {\n        Parallax.winHeight = $win.height();\n        Parallax.winWidth  = $win.width();\n        Parallax.docHeight = $doc.height();\n        Parallax.docWidth  = $doc.width();\n      };\n\n      var loadScrollPosition = function() {\n        var winScrollTop  = $win.scrollTop();\n        var scrollTopMax  = Parallax.docHeight - Parallax.winHeight;\n        var scrollLeftMax = Parallax.docWidth  - Parallax.winWidth;\n        Parallax.scrollTop  = Math.max(0, Math.min(scrollTopMax,  winScrollTop));\n        Parallax.scrollLeft = Math.max(0, Math.min(scrollLeftMax, $win.scrollLeft()));\n        Parallax.overScroll = Math.max(winScrollTop - scrollTopMax, Math.min(winScrollTop, 0));\n      };\n\n      $win.on('resize.px.parallax load.px.parallax', function() {\n          loadDimensions();\n          self.refresh();\n          Parallax.isFresh = false;\n          Parallax.requestRender();\n        })\n        .on('scroll.px.parallax load.px.parallax', function() {\n          loadScrollPosition();\n          Parallax.requestRender();\n        });\n\n      loadDimensions();\n      loadScrollPosition();\n\n      this.isReady = true;\n\n      var lastPosition = -1;\n\n      function frameLoop() {\n        if (lastPosition == window.pageYOffset) {   // Avoid overcalculations\n          window.requestAnimationFrame(frameLoop);\n          return false;\n        } else lastPosition = window.pageYOffset;\n\n        self.render();\n        window.requestAnimationFrame(frameLoop);\n      }\n\n      frameLoop();\n    },\n\n    configure: function(options) {\n      if (typeof options == 'object') {\n        delete options.refresh;\n        delete options.render;\n        $.extend(this.prototype, options);\n      }\n    },\n\n    refresh: function() {\n      $.each(this.sliders, function(){ this.refresh(); });\n      this.isFresh = true;\n    },\n\n    render: function() {\n      this.isFresh || this.refresh();\n      $.each(this.sliders, function(){ this.render(); });\n    },\n\n    requestRender: function() {\n      var self = this;\n      self.render();\n      self.isBusy = false;\n    },\n    destroy: function(el){\n      var i,\n          parallaxElement = $(el).data('px.parallax');\n      parallaxElement.$mirror.remove();\n      for(i=0; i < this.sliders.length; i+=1){\n        if(this.sliders[i] == parallaxElement){\n          this.sliders.splice(i, 1);\n        }\n      }\n      $(el).data('px.parallax', false);\n      if(this.sliders.length === 0){\n        $(window).off('scroll.px.parallax resize.px.parallax load.px.parallax');\n        this.isReady = false;\n        Parallax.isSetup = false;\n      }\n    }\n  });\n\n\n  // Parallax Plugin Definition\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var options = typeof option == 'object' && option;\n\n      if (this == window || this == document || $this.is('body')) {\n        Parallax.configure(options);\n      }\n      else if (!$this.data('px.parallax')) {\n        options = $.extend({}, $this.data(), options);\n        $this.data('px.parallax', new Parallax(this, options));\n      }\n      else if (typeof option == 'object')\n      {\n        $.extend($this.data('px.parallax'), options);\n      }\n      if (typeof option == 'string') {\n        if(option == 'destroy'){\n            Parallax.destroy(this);\n        }else{\n          Parallax[option]();\n        }\n      }\n    });\n  }\n\n  var old = $.fn.parallax;\n\n  $.fn.parallax             = Plugin;\n  $.fn.parallax.Constructor = Parallax;\n\n\n  // Parallax No Conflict\n\n  $.fn.parallax.noConflict = function () {\n    $.fn.parallax = old;\n    return this;\n  };\n\n\n  // Parallax Data-API\n\n  $( function () { \n    $('[data-parallax=\"scroll\"]').parallax(); \n  });\n\n}(jQuery, window, document));\n","/*!\n * Parsley.js\n * Version 2.9.1 - built Tue, Apr 30th 2019, 1:56 am\n * http://parsleyjs.org\n * Guillaume Potier - <guillaume@wisembly.com>\n * Marc-Andre Lafortune - <petroselinum@marc-andre.ca>\n * MIT Licensed\n */\n\n// The source code below is generated by babel as\n// Parsley is written in ECMAScript 6\n//\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery')) :\n        typeof define === 'function' && define.amd ? define(['jquery'], factory) :\n            (global.parsley = factory(global.jQuery));\n}(this, (function ($) { 'use strict';\n\n    function _typeof(obj) {\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n            _typeof = function (obj) {\n                return typeof obj;\n            };\n        } else {\n            _typeof = function (obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n        }\n\n        return _typeof(obj);\n    }\n\n    function _extends() {\n        _extends = Object.assign || function (target) {\n                for (var i = 1; i < arguments.length; i++) {\n                    var source = arguments[i];\n\n                    for (var key in source) {\n                        if (Object.prototype.hasOwnProperty.call(source, key)) {\n                            target[key] = source[key];\n                        }\n                    }\n                }\n\n                return target;\n            };\n\n        return _extends.apply(this, arguments);\n    }\n\n    function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n    }\n\n    function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n    }\n\n    function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) {\n            for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n            return arr2;\n        }\n    }\n\n    function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n    }\n\n    function _iterableToArray(iter) {\n        if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n    }\n\n    function _iterableToArrayLimit(arr, i) {\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n\n        try {\n            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n                _arr.push(_s.value);\n\n                if (i && _arr.length === i) break;\n            }\n        } catch (err) {\n            _d = true;\n            _e = err;\n        } finally {\n            try {\n                if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n            } finally {\n                if (_d) throw _e;\n            }\n        }\n\n        return _arr;\n    }\n\n    function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }\n\n    function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n\n    var globalID = 1;\n    var pastWarnings = {};\n    var Utils = {\n        // Parsley DOM-API\n        // returns object from dom attributes and values\n        attr: function attr(element, namespace, obj) {\n            var i;\n            var attribute;\n            var attributes;\n            var regex = new RegExp('^' + namespace, 'i');\n            if ('undefined' === typeof obj) obj = {};else {\n                // Clear all own properties. This won't affect prototype's values\n                for (i in obj) {\n                    if (obj.hasOwnProperty(i)) delete obj[i];\n                }\n            }\n            if (!element) return obj;\n            attributes = element.attributes;\n\n            for (i = attributes.length; i--;) {\n                attribute = attributes[i];\n\n                if (attribute && attribute.specified && regex.test(attribute.name)) {\n                    obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n                }\n            }\n\n            return obj;\n        },\n        checkAttr: function checkAttr(element, namespace, _checkAttr) {\n            return element.hasAttribute(namespace + _checkAttr);\n        },\n        setAttr: function setAttr(element, namespace, attr, value) {\n            element.setAttribute(this.dasherize(namespace + attr), String(value));\n        },\n        getType: function getType(element) {\n            return element.getAttribute('type') || 'text';\n        },\n        generateID: function generateID() {\n            return '' + globalID++;\n        },\n\n        /** Third party functions **/\n        deserializeValue: function deserializeValue(value) {\n            var num;\n\n            try {\n                return value ? value == \"true\" || (value == \"false\" ? false : value == \"null\" ? null : !isNaN(num = Number(value)) ? num : /^[\\[\\{]/.test(value) ? JSON.parse(value) : value) : value;\n            } catch (e) {\n                return value;\n            }\n        },\n        // Zepto camelize function\n        camelize: function camelize(str) {\n            return str.replace(/-+(.)?/g, function (match, chr) {\n                return chr ? chr.toUpperCase() : '';\n            });\n        },\n        // Zepto dasherize function\n        dasherize: function dasherize(str) {\n            return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();\n        },\n        warn: function warn() {\n            var _window$console;\n\n            if (window.console && 'function' === typeof window.console.warn) (_window$console = window.console).warn.apply(_window$console, arguments);\n        },\n        warnOnce: function warnOnce(msg) {\n            if (!pastWarnings[msg]) {\n                pastWarnings[msg] = true;\n                this.warn.apply(this, arguments);\n            }\n        },\n        _resetWarnings: function _resetWarnings() {\n            pastWarnings = {};\n        },\n        trimString: function trimString(string) {\n            return string.replace(/^\\s+|\\s+$/g, '');\n        },\n        parse: {\n            date: function date(string) {\n                var parsed = string.match(/^(\\d{4,})-(\\d\\d)-(\\d\\d)$/);\n                if (!parsed) return null;\n\n                var _parsed$map = parsed.map(function (x) {\n                        return parseInt(x, 10);\n                    }),\n                    _parsed$map2 = _slicedToArray(_parsed$map, 4),\n                    _ = _parsed$map2[0],\n                    year = _parsed$map2[1],\n                    month = _parsed$map2[2],\n                    day = _parsed$map2[3];\n\n                var date = new Date(year, month - 1, day);\n                if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) return null;\n                return date;\n            },\n            string: function string(_string) {\n                return _string;\n            },\n            integer: function integer(string) {\n                if (isNaN(string)) return null;\n                return parseInt(string, 10);\n            },\n            number: function number(string) {\n                if (isNaN(string)) throw null;\n                return parseFloat(string);\n            },\n            'boolean': function _boolean(string) {\n                return !/^\\s*false\\s*$/i.test(string);\n            },\n            object: function object(string) {\n                return Utils.deserializeValue(string);\n            },\n            regexp: function regexp(_regexp) {\n                var flags = ''; // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n\n                if (/^\\/.*\\/(?:[gimy]*)$/.test(_regexp)) {\n                    // Replace the regexp literal string with the first match group: ([gimy]*)\n                    // If no flag is present, this will be a blank string\n                    flags = _regexp.replace(/.*\\/([gimy]*)$/, '$1'); // Again, replace the regexp literal string with the first match group:\n                    // everything excluding the opening and closing slashes and the flags\n\n                    _regexp = _regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n                } else {\n                    // Anchor regexp:\n                    _regexp = '^' + _regexp + '$';\n                }\n\n                return new RegExp(_regexp, flags);\n            }\n        },\n        parseRequirement: function parseRequirement(requirementType, string) {\n            var converter = this.parse[requirementType || 'string'];\n            if (!converter) throw 'Unknown requirement specification: \"' + requirementType + '\"';\n            var converted = converter(string);\n            if (converted === null) throw \"Requirement is not a \".concat(requirementType, \": \\\"\").concat(string, \"\\\"\");\n            return converted;\n        },\n        namespaceEvents: function namespaceEvents(events, namespace) {\n            events = this.trimString(events || '').split(/\\s+/);\n            if (!events[0]) return '';\n            return $.map(events, function (evt) {\n                return \"\".concat(evt, \".\").concat(namespace);\n            }).join(' ');\n        },\n        difference: function difference(array, remove) {\n            // This is O(N^2), should be optimized\n            var result = [];\n            $.each(array, function (_, elem) {\n                if (remove.indexOf(elem) == -1) result.push(elem);\n            });\n            return result;\n        },\n        // Alter-ego to native Promise.all, but for jQuery\n        all: function all(promises) {\n            // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n            return $.when.apply($, _toConsumableArray(promises).concat([42, 42]));\n        },\n        // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n        objectCreate: Object.create || function () {\n            var Object = function Object() {};\n\n            return function (prototype) {\n                if (arguments.length > 1) {\n                    throw Error('Second argument not supported');\n                }\n\n                if (_typeof(prototype) != 'object') {\n                    throw TypeError('Argument must be an object');\n                }\n\n                Object.prototype = prototype;\n                var result = new Object();\n                Object.prototype = null;\n                return result;\n            };\n        }(),\n        _SubmitSelector: 'input[type=\"submit\"], button:submit'\n    };\n\n    // All these options could be overriden and specified directly in DOM using\n    // `data-parsley-` default DOM-API\n    // eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n    // eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n    var Defaults = {\n        // ### General\n        // Default data-namespace for DOM API\n        namespace: 'data-parsley-',\n        // Supported inputs by default\n        inputs: 'input, textarea, select',\n        // Excluded inputs by default\n        excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',\n        // Stop validating field on highest priority failing constraint\n        priorityEnabled: true,\n        // ### Field only\n        // identifier used to group together inputs (e.g. radio buttons...)\n        multiple: null,\n        // identifier (or array of identifiers) used to validate only a select group of inputs\n        group: null,\n        // ### UI\n        // Enable\\Disable error messages\n        uiEnabled: true,\n        // Key events threshold before validation\n        validationThreshold: 3,\n        // Focused field on form validation error. 'first'|'last'|'none'\n        focus: 'first',\n        // event(s) that will trigger validation before first failure. eg: `input`...\n        trigger: false,\n        // event(s) that will trigger validation after first failure.\n        triggerAfterFailure: 'input',\n        // Class that would be added on every failing validation Parsley field\n        errorClass: 'parsley-error',\n        // Same for success validation\n        successClass: 'parsley-success',\n        // Return the `$element` that will receive these above success or error classes\n        // Could also be (and given directly from DOM) a valid selector like `'#div'`\n        classHandler: function classHandler(Field) {},\n        // Return the `$element` where errors will be appended\n        // Could also be (and given directly from DOM) a valid selector like `'#div'`\n        errorsContainer: function errorsContainer(Field) {},\n        // ul elem that would receive errors' list\n        errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n        // li elem that would receive error message\n        errorTemplate: '<li></li>'\n    };\n\n    var Base = function Base() {\n        this.__id__ = Utils.generateID();\n    };\n\n    Base.prototype = {\n        asyncSupport: true,\n        // Deprecated\n        _pipeAccordingToValidationResult: function _pipeAccordingToValidationResult() {\n            var _this = this;\n\n            var pipe = function pipe() {\n                var r = $.Deferred();\n                if (true !== _this.validationResult) r.reject();\n                return r.resolve().promise();\n            };\n\n            return [pipe, pipe];\n        },\n        actualizeOptions: function actualizeOptions() {\n            Utils.attr(this.element, this.options.namespace, this.domOptions);\n            if (this.parent && this.parent.actualizeOptions) this.parent.actualizeOptions();\n            return this;\n        },\n        _resetOptions: function _resetOptions(initOptions) {\n            this.domOptions = Utils.objectCreate(this.parent.options);\n            this.options = Utils.objectCreate(this.domOptions); // Shallow copy of ownProperties of initOptions:\n\n            for (var i in initOptions) {\n                if (initOptions.hasOwnProperty(i)) this.options[i] = initOptions[i];\n            }\n\n            this.actualizeOptions();\n        },\n        _listeners: null,\n        // Register a callback for the given event name\n        // Callback is called with context as the first argument and the `this`\n        // The context is the current parsley instance, or window.Parsley if global\n        // A return value of `false` will interrupt the calls\n        on: function on(name, fn) {\n            this._listeners = this._listeners || {};\n            var queue = this._listeners[name] = this._listeners[name] || [];\n            queue.push(fn);\n            return this;\n        },\n        // Deprecated. Use `on` instead\n        subscribe: function subscribe(name, fn) {\n            $.listenTo(this, name.toLowerCase(), fn);\n        },\n        // Unregister a callback (or all if none is given) for the given event name\n        off: function off(name, fn) {\n            var queue = this._listeners && this._listeners[name];\n\n            if (queue) {\n                if (!fn) {\n                    delete this._listeners[name];\n                } else {\n                    for (var i = queue.length; i--;) {\n                        if (queue[i] === fn) queue.splice(i, 1);\n                    }\n                }\n            }\n\n            return this;\n        },\n        // Deprecated. Use `off`\n        unsubscribe: function unsubscribe(name, fn) {\n            $.unsubscribeTo(this, name.toLowerCase());\n        },\n        // Trigger an event of the given name\n        // A return value of `false` interrupts the callback chain\n        // Returns false if execution was interrupted\n        trigger: function trigger(name, target, extraArg) {\n            target = target || this;\n            var queue = this._listeners && this._listeners[name];\n            var result;\n\n            if (queue) {\n                for (var i = queue.length; i--;) {\n                    result = queue[i].call(target, target, extraArg);\n                    if (result === false) return result;\n                }\n            }\n\n            if (this.parent) {\n                return this.parent.trigger(name, target, extraArg);\n            }\n\n            return true;\n        },\n        asyncIsValid: function asyncIsValid(group, force) {\n            Utils.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n            return this.whenValid({\n                group: group,\n                force: force\n            });\n        },\n        _findRelated: function _findRelated() {\n            return this.options.multiple ? $(this.parent.element.querySelectorAll(\"[\".concat(this.options.namespace, \"multiple=\\\"\").concat(this.options.multiple, \"\\\"]\"))) : this.$element;\n        }\n    };\n\n    var convertArrayRequirement = function convertArrayRequirement(string, length) {\n        var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n        if (!m) throw 'Requirement is not an array: \"' + string + '\"';\n        var values = m[1].split(',').map(Utils.trimString);\n        if (values.length !== length) throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';\n        return values;\n    };\n\n    var convertExtraOptionRequirement = function convertExtraOptionRequirement(requirementSpec, string, extraOptionReader) {\n        var main = null;\n        var extra = {};\n\n        for (var key in requirementSpec) {\n            if (key) {\n                var value = extraOptionReader(key);\n                if ('string' === typeof value) value = Utils.parseRequirement(requirementSpec[key], value);\n                extra[key] = value;\n            } else {\n                main = Utils.parseRequirement(requirementSpec[key], string);\n            }\n        }\n\n        return [main, extra];\n    }; // A Validator needs to implement the methods `validate` and `parseRequirements`\n\n\n    var Validator = function Validator(spec) {\n        $.extend(true, this, spec);\n    };\n\n    Validator.prototype = {\n        // Returns `true` iff the given `value` is valid according the given requirements.\n        validate: function validate(value, requirementFirstArg) {\n            if (this.fn) {\n                // Legacy style validator\n                if (arguments.length > 3) // If more args then value, requirement, instance...\n                    requirementFirstArg = [].slice.call(arguments, 1, -1); // Skip first arg (value) and last (instance), combining the rest\n\n                return this.fn(value, requirementFirstArg);\n            }\n\n            if (Array.isArray(value)) {\n                if (!this.validateMultiple) throw 'Validator `' + this.name + '` does not handle multiple values';\n                return this.validateMultiple.apply(this, arguments);\n            } else {\n                var instance = arguments[arguments.length - 1];\n\n                if (this.validateDate && instance._isDateInput()) {\n                    arguments[0] = Utils.parse.date(arguments[0]);\n                    if (arguments[0] === null) return false;\n                    return this.validateDate.apply(this, arguments);\n                }\n\n                if (this.validateNumber) {\n                    if (!value) // Builtin validators all accept empty strings, except `required` of course\n                        return true;\n                    if (isNaN(value)) return false;\n                    arguments[0] = parseFloat(arguments[0]);\n                    return this.validateNumber.apply(this, arguments);\n                }\n\n                if (this.validateString) {\n                    return this.validateString.apply(this, arguments);\n                }\n\n                throw 'Validator `' + this.name + '` only handles multiple values';\n            }\n        },\n        // Parses `requirements` into an array of arguments,\n        // according to `this.requirementType`\n        parseRequirements: function parseRequirements(requirements, extraOptionReader) {\n            if ('string' !== typeof requirements) {\n                // Assume requirement already parsed\n                // but make sure we return an array\n                return Array.isArray(requirements) ? requirements : [requirements];\n            }\n\n            var type = this.requirementType;\n\n            if (Array.isArray(type)) {\n                var values = convertArrayRequirement(requirements, type.length);\n\n                for (var i = 0; i < values.length; i++) {\n                    values[i] = Utils.parseRequirement(type[i], values[i]);\n                }\n\n                return values;\n            } else if ($.isPlainObject(type)) {\n                return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n            } else {\n                return [Utils.parseRequirement(type, requirements)];\n            }\n        },\n        // Defaults:\n        requirementType: 'string',\n        priority: 2\n    };\n\n    var ValidatorRegistry = function ValidatorRegistry(validators, catalog) {\n        this.__class__ = 'ValidatorRegistry'; // Default Parsley locale is en\n\n        this.locale = 'en';\n        this.init(validators || {}, catalog || {});\n    };\n\n    var typeTesters = {\n        email: /^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/,\n        // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n        number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n        integer: /^-?\\d+$/,\n        digits: /^\\d+$/,\n        alphanum: /^\\w+$/i,\n        date: {\n            test: function test(value) {\n                return Utils.parse.date(value) !== null;\n            }\n        },\n        url: new RegExp(\"^\" + // protocol identifier\n            \"(?:(?:https?|ftp)://)?\" + // ** mod: make scheme optional\n            // user:pass authentication\n            \"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\" + // IP address exclusion\n            // private & local networks\n            // \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +   // ** mod: allow local networks\n            // \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n            // \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n            // IP address dotted notation octets\n            // excludes loopback network 0.0.0.0\n            // excludes reserved space >= 224.0.0.0\n            // excludes network & broacast addresses\n            // (first & last IP address of each class)\n            \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" + // host name\n            \"(?:(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)\" + // domain name\n            \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)*\" + // TLD identifier\n            \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff]{2,}))\" + \")\" + // port number\n            \"(?::\\\\d{2,5})?\" + // resource path\n            \"(?:/\\\\S*)?\" + \"$\")\n    };\n    typeTesters.range = typeTesters.number; // See http://stackoverflow.com/a/10454560/8279\n\n    var decimalPlaces = function decimalPlaces(num) {\n        var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n        if (!match) {\n            return 0;\n        }\n\n        return Math.max(0, // Number of digits right of decimal point.\n            (match[1] ? match[1].length : 0) - ( // Adjust for scientific notation.\n                match[2] ? +match[2] : 0));\n    }; // parseArguments('number', ['1', '2']) => [1, 2]\n\n\n    var parseArguments = function parseArguments(type, args) {\n        return args.map(Utils.parse[type]);\n    }; // operatorToValidator returns a validating function for an operator function, applied to the given type\n\n\n    var operatorToValidator = function operatorToValidator(type, operator) {\n        return function (value) {\n            for (var _len = arguments.length, requirementsAndInput = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                requirementsAndInput[_key - 1] = arguments[_key];\n            }\n\n            requirementsAndInput.pop(); // Get rid of `input` argument\n\n            return operator.apply(void 0, [value].concat(_toConsumableArray(parseArguments(type, requirementsAndInput))));\n        };\n    };\n\n    var comparisonOperator = function comparisonOperator(operator) {\n        return {\n            validateDate: operatorToValidator('date', operator),\n            validateNumber: operatorToValidator('number', operator),\n            requirementType: operator.length <= 2 ? 'string' : ['string', 'string'],\n            // Support operators with a 1 or 2 requirement(s)\n            priority: 30\n        };\n    };\n\n    ValidatorRegistry.prototype = {\n        init: function init(validators, catalog) {\n            this.catalog = catalog; // Copy prototype's validators:\n\n            this.validators = _extends({}, this.validators);\n\n            for (var name in validators) {\n                this.addValidator(name, validators[name].fn, validators[name].priority);\n            }\n\n            window.Parsley.trigger('parsley:validator:init');\n        },\n        // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n        setLocale: function setLocale(locale) {\n            if ('undefined' === typeof this.catalog[locale]) throw new Error(locale + ' is not available in the catalog');\n            this.locale = locale;\n            return this;\n        },\n        // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n        addCatalog: function addCatalog(locale, messages, set) {\n            if ('object' === _typeof(messages)) this.catalog[locale] = messages;\n            if (true === set) return this.setLocale(locale);\n            return this;\n        },\n        // Add a specific message for a given constraint in a given locale\n        addMessage: function addMessage(locale, name, message) {\n            if ('undefined' === typeof this.catalog[locale]) this.catalog[locale] = {};\n            this.catalog[locale][name] = message;\n            return this;\n        },\n        // Add messages for a given locale\n        addMessages: function addMessages(locale, nameMessageObject) {\n            for (var name in nameMessageObject) {\n                this.addMessage(locale, name, nameMessageObject[name]);\n            }\n\n            return this;\n        },\n        // Add a new validator\n        //\n        //    addValidator('custom', {\n        //        requirementType: ['integer', 'integer'],\n        //        validateString: function(value, from, to) {},\n        //        priority: 22,\n        //        messages: {\n        //          en: \"Hey, that's no good\",\n        //          fr: \"Aye aye, pas bon du tout\",\n        //        }\n        //    })\n        //\n        // Old API was addValidator(name, function, priority)\n        //\n        addValidator: function addValidator(name, arg1, arg2) {\n            if (this.validators[name]) Utils.warn('Validator \"' + name + '\" is already defined.');else if (Defaults.hasOwnProperty(name)) {\n                Utils.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n                return;\n            }\n            return this._setValidator.apply(this, arguments);\n        },\n        hasValidator: function hasValidator(name) {\n            return !!this.validators[name];\n        },\n        updateValidator: function updateValidator(name, arg1, arg2) {\n            if (!this.validators[name]) {\n                Utils.warn('Validator \"' + name + '\" is not already defined.');\n                return this.addValidator.apply(this, arguments);\n            }\n\n            return this._setValidator.apply(this, arguments);\n        },\n        removeValidator: function removeValidator(name) {\n            if (!this.validators[name]) Utils.warn('Validator \"' + name + '\" is not defined.');\n            delete this.validators[name];\n            return this;\n        },\n        _setValidator: function _setValidator(name, validator, priority) {\n            if ('object' !== _typeof(validator)) {\n                // Old style validator, with `fn` and `priority`\n                validator = {\n                    fn: validator,\n                    priority: priority\n                };\n            }\n\n            if (!validator.validate) {\n                validator = new Validator(validator);\n            }\n\n            this.validators[name] = validator;\n\n            for (var locale in validator.messages || {}) {\n                this.addMessage(locale, name, validator.messages[locale]);\n            }\n\n            return this;\n        },\n        getErrorMessage: function getErrorMessage(constraint) {\n            var message; // Type constraints are a bit different, we have to match their requirements too to find right error message\n\n            if ('type' === constraint.name) {\n                var typeMessages = this.catalog[this.locale][constraint.name] || {};\n                message = typeMessages[constraint.requirements];\n            } else message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n\n            return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n        },\n        // Kind of light `sprintf()` implementation\n        formatMessage: function formatMessage(string, parameters) {\n            if ('object' === _typeof(parameters)) {\n                for (var i in parameters) {\n                    string = this.formatMessage(string, parameters[i]);\n                }\n\n                return string;\n            }\n\n            return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';\n        },\n        // Here is the Parsley default validators list.\n        // A validator is an object with the following key values:\n        //  - priority: an integer\n        //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n        //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n        // Alternatively, a validator can be a function that returns such an object\n        //\n        validators: {\n            notblank: {\n                validateString: function validateString(value) {\n                    return /\\S/.test(value);\n                },\n                priority: 2\n            },\n            required: {\n                validateMultiple: function validateMultiple(values) {\n                    return values.length > 0;\n                },\n                validateString: function validateString(value) {\n                    return /\\S/.test(value);\n                },\n                priority: 512\n            },\n            type: {\n                validateString: function validateString(value, type) {\n                    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n                        _ref$step = _ref.step,\n                        step = _ref$step === void 0 ? 'any' : _ref$step,\n                        _ref$base = _ref.base,\n                        base = _ref$base === void 0 ? 0 : _ref$base;\n\n                    var tester = typeTesters[type];\n\n                    if (!tester) {\n                        throw new Error('validator type `' + type + '` is not supported');\n                    }\n\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n                    if (!tester.test(value)) return false;\n\n                    if ('number' === type) {\n                        if (!/^any$/i.test(step || '')) {\n                            var nb = Number(value);\n                            var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n                            if (decimalPlaces(nb) > decimals) // Value can't have too many decimals\n                                return false; // Be careful of rounding errors by using integers.\n\n                            var toInt = function toInt(f) {\n                                return Math.round(f * Math.pow(10, decimals));\n                            };\n\n                            if ((toInt(nb) - toInt(base)) % toInt(step) != 0) return false;\n                        }\n                    }\n\n                    return true;\n                },\n                requirementType: {\n                    '': 'string',\n                    step: 'string',\n                    base: 'number'\n                },\n                priority: 256\n            },\n            pattern: {\n                validateString: function validateString(value, regexp) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n                    return regexp.test(value);\n                },\n                requirementType: 'regexp',\n                priority: 64\n            },\n            minlength: {\n                validateString: function validateString(value, requirement) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n                    return value.length >= requirement;\n                },\n                requirementType: 'integer',\n                priority: 30\n            },\n            maxlength: {\n                validateString: function validateString(value, requirement) {\n                    return value.length <= requirement;\n                },\n                requirementType: 'integer',\n                priority: 30\n            },\n            length: {\n                validateString: function validateString(value, min, max) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n                    return value.length >= min && value.length <= max;\n                },\n                requirementType: ['integer', 'integer'],\n                priority: 30\n            },\n            mincheck: {\n                validateMultiple: function validateMultiple(values, requirement) {\n                    return values.length >= requirement;\n                },\n                requirementType: 'integer',\n                priority: 30\n            },\n            maxcheck: {\n                validateMultiple: function validateMultiple(values, requirement) {\n                    return values.length <= requirement;\n                },\n                requirementType: 'integer',\n                priority: 30\n            },\n            check: {\n                validateMultiple: function validateMultiple(values, min, max) {\n                    return values.length >= min && values.length <= max;\n                },\n                requirementType: ['integer', 'integer'],\n                priority: 30\n            },\n            min: comparisonOperator(function (value, requirement) {\n                return value >= requirement;\n            }),\n            max: comparisonOperator(function (value, requirement) {\n                return value <= requirement;\n            }),\n            range: comparisonOperator(function (value, min, max) {\n                return value >= min && value <= max;\n            }),\n            equalto: {\n                validateString: function validateString(value, refOrValue) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n                    var $reference = $(refOrValue);\n                    if ($reference.length) return value === $reference.val();else return value === refOrValue;\n                },\n                priority: 256\n            },\n            euvatin: {\n                validateString: function validateString(value, refOrValue) {\n                    if (!value) {\n                        return true; // Builtin validators all accept empty strings, except `required` of course\n                    }\n\n                    var re = /^[A-Z][A-Z][A-Za-z0-9 -]{2,}$/;\n                    return re.test(value);\n                },\n                priority: 30\n            }\n        }\n    };\n\n    var UI = {};\n\n    var diffResults = function diffResults(newResult, oldResult, deep) {\n        var added = [];\n        var kept = [];\n\n        for (var i = 0; i < newResult.length; i++) {\n            var found = false;\n\n            for (var j = 0; j < oldResult.length; j++) {\n                if (newResult[i].assert.name === oldResult[j].assert.name) {\n                    found = true;\n                    break;\n                }\n            }\n\n            if (found) kept.push(newResult[i]);else added.push(newResult[i]);\n        }\n\n        return {\n            kept: kept,\n            added: added,\n            removed: !deep ? diffResults(oldResult, newResult, true).added : []\n        };\n    };\n\n    UI.Form = {\n        _actualizeTriggers: function _actualizeTriggers() {\n            var _this = this;\n\n            this.$element.on('submit.Parsley', function (evt) {\n                _this.onSubmitValidate(evt);\n            });\n            this.$element.on('click.Parsley', Utils._SubmitSelector, function (evt) {\n                _this.onSubmitButton(evt);\n            }); // UI could be disabled\n\n            if (false === this.options.uiEnabled) return;\n            this.element.setAttribute('novalidate', '');\n        },\n        focus: function focus() {\n            this._focusedField = null;\n            if (true === this.validationResult || 'none' === this.options.focus) return null;\n\n            for (var i = 0; i < this.fields.length; i++) {\n                var field = this.fields[i];\n\n                if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {\n                    this._focusedField = field.$element;\n                    if ('first' === this.options.focus) break;\n                }\n            }\n\n            if (null === this._focusedField) return null;\n            return this._focusedField.focus();\n        },\n        _destroyUI: function _destroyUI() {\n            // Reset all event listeners\n            this.$element.off('.Parsley');\n        }\n    };\n    UI.Field = {\n        _reflowUI: function _reflowUI() {\n            this._buildUI(); // If this field doesn't have an active UI don't bother doing something\n\n\n            if (!this._ui) return; // Diff between two validation results\n\n            var diff = diffResults(this.validationResult, this._ui.lastValidationResult); // Then store current validation result for next reflow\n\n            this._ui.lastValidationResult = this.validationResult; // Handle valid / invalid / none field class\n\n            this._manageStatusClass(); // Add, remove, updated errors messages\n\n\n            this._manageErrorsMessages(diff); // Triggers impl\n\n\n            this._actualizeTriggers(); // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n\n\n            if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n                this._failedOnce = true;\n\n                this._actualizeTriggers();\n            }\n        },\n        // Returns an array of field's error message(s)\n        getErrorsMessages: function getErrorsMessages() {\n            // No error message, field is valid\n            if (true === this.validationResult) return [];\n            var messages = [];\n\n            for (var i = 0; i < this.validationResult.length; i++) {\n                messages.push(this.validationResult[i].errorMessage || this._getErrorMessage(this.validationResult[i].assert));\n            }\n\n            return messages;\n        },\n        // It's a goal of Parsley that this method is no longer required [#1073]\n        addError: function addError(name) {\n            var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                message = _ref.message,\n                assert = _ref.assert,\n                _ref$updateClass = _ref.updateClass,\n                updateClass = _ref$updateClass === void 0 ? true : _ref$updateClass;\n\n            this._buildUI();\n\n            this._addError(name, {\n                message: message,\n                assert: assert\n            });\n\n            if (updateClass) this._errorClass();\n        },\n        // It's a goal of Parsley that this method is no longer required [#1073]\n        updateError: function updateError(name) {\n            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                message = _ref2.message,\n                assert = _ref2.assert,\n                _ref2$updateClass = _ref2.updateClass,\n                updateClass = _ref2$updateClass === void 0 ? true : _ref2$updateClass;\n\n            this._buildUI();\n\n            this._updateError(name, {\n                message: message,\n                assert: assert\n            });\n\n            if (updateClass) this._errorClass();\n        },\n        // It's a goal of Parsley that this method is no longer required [#1073]\n        removeError: function removeError(name) {\n            var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                _ref3$updateClass = _ref3.updateClass,\n                updateClass = _ref3$updateClass === void 0 ? true : _ref3$updateClass;\n\n            this._buildUI();\n\n            this._removeError(name); // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n            // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n\n\n            if (updateClass) this._manageStatusClass();\n        },\n        _manageStatusClass: function _manageStatusClass() {\n            if (this.hasConstraints() && this.needsValidation() && true === this.validationResult) this._successClass();else if (this.validationResult.length > 0) this._errorClass();else this._resetClass();\n        },\n        _manageErrorsMessages: function _manageErrorsMessages(diff) {\n            if ('undefined' !== typeof this.options.errorsMessagesDisabled) return; // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n\n            if ('undefined' !== typeof this.options.errorMessage) {\n                if (diff.added.length || diff.kept.length) {\n                    this._insertErrorWrapper();\n\n                    if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length) this._ui.$errorsWrapper.append($(this.options.errorTemplate).addClass('parsley-custom-error-message'));\n                    return this._ui.$errorsWrapper.addClass('filled').find('.parsley-custom-error-message').html(this.options.errorMessage);\n                }\n\n                return this._ui.$errorsWrapper.removeClass('filled').find('.parsley-custom-error-message').remove();\n            } // Show, hide, update failing constraints messages\n\n\n            for (var i = 0; i < diff.removed.length; i++) {\n                this._removeError(diff.removed[i].assert.name);\n            }\n\n            for (i = 0; i < diff.added.length; i++) {\n                this._addError(diff.added[i].assert.name, {\n                    message: diff.added[i].errorMessage,\n                    assert: diff.added[i].assert\n                });\n            }\n\n            for (i = 0; i < diff.kept.length; i++) {\n                this._updateError(diff.kept[i].assert.name, {\n                    message: diff.kept[i].errorMessage,\n                    assert: diff.kept[i].assert\n                });\n            }\n        },\n        _addError: function _addError(name, _ref4) {\n            var message = _ref4.message,\n                assert = _ref4.assert;\n\n            this._insertErrorWrapper();\n\n            this._ui.$errorClassHandler.attr('aria-describedby', this._ui.errorsWrapperId);\n\n            this._ui.$errorsWrapper.addClass('filled').append($(this.options.errorTemplate).addClass('parsley-' + name).html(message || this._getErrorMessage(assert)));\n        },\n        _updateError: function _updateError(name, _ref5) {\n            var message = _ref5.message,\n                assert = _ref5.assert;\n\n            this._ui.$errorsWrapper.addClass('filled').find('.parsley-' + name).html(message || this._getErrorMessage(assert));\n        },\n        _removeError: function _removeError(name) {\n            this._ui.$errorClassHandler.removeAttr('aria-describedby');\n\n            this._ui.$errorsWrapper.removeClass('filled').find('.parsley-' + name).remove();\n        },\n        _getErrorMessage: function _getErrorMessage(constraint) {\n            var customConstraintErrorMessage = constraint.name + 'Message';\n            if ('undefined' !== typeof this.options[customConstraintErrorMessage]) return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n            return window.Parsley.getErrorMessage(constraint);\n        },\n        _buildUI: function _buildUI() {\n            // UI could be already built or disabled\n            if (this._ui || false === this.options.uiEnabled) return;\n            var _ui = {}; // Give field its Parsley id in DOM\n\n            this.element.setAttribute(this.options.namespace + 'id', this.__id__);\n            /** Generate important UI elements and store them in this **/\n            // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n\n            _ui.$errorClassHandler = this._manageClassHandler(); // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n\n            _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);\n            _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId); // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n\n            _ui.lastValidationResult = [];\n            _ui.validationInformationVisible = false; // Store it in this for later\n\n            this._ui = _ui;\n        },\n        // Determine which element will have `parsley-error` and `parsley-success` classes\n        _manageClassHandler: function _manageClassHandler() {\n            // Class handled could also be determined by function given in Parsley options\n            if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length) return $(this.options.classHandler); // Class handled could also be determined by function given in Parsley options\n\n            var $handlerFunction = this.options.classHandler; // It might also be the function name of a global function\n\n            if ('string' === typeof this.options.classHandler && 'function' === typeof window[this.options.classHandler]) $handlerFunction = window[this.options.classHandler];\n\n            if ('function' === typeof $handlerFunction) {\n                var $handler = $handlerFunction.call(this, this); // If this function returned a valid existing DOM element, go for it\n\n                if ('undefined' !== typeof $handler && $handler.length) return $handler;\n            } else if ('object' === _typeof($handlerFunction) && $handlerFunction instanceof jQuery && $handlerFunction.length) {\n                return $handlerFunction;\n            } else if ($handlerFunction) {\n                Utils.warn('The class handler `' + $handlerFunction + '` does not exist in DOM nor as a global JS function');\n            }\n\n            return this._inputHolder();\n        },\n        _inputHolder: function _inputHolder() {\n            // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n            if (!this.options.multiple || this.element.nodeName === 'SELECT') return this.$element; // But if multiple element (radio, checkbox), that would be their parent\n\n            return this.$element.parent();\n        },\n        _insertErrorWrapper: function _insertErrorWrapper() {\n            var $errorsContainer = this.options.errorsContainer; // Nothing to do if already inserted\n\n            if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent();\n\n            if ('string' === typeof $errorsContainer) {\n                if ($($errorsContainer).length) return $($errorsContainer).append(this._ui.$errorsWrapper);else if ('function' === typeof window[$errorsContainer]) $errorsContainer = window[$errorsContainer];else Utils.warn('The errors container `' + $errorsContainer + '` does not exist in DOM nor as a global JS function');\n            }\n\n            if ('function' === typeof $errorsContainer) $errorsContainer = $errorsContainer.call(this, this);\n            if ('object' === _typeof($errorsContainer) && $errorsContainer.length) return $errorsContainer.append(this._ui.$errorsWrapper);\n            return this._inputHolder().after(this._ui.$errorsWrapper);\n        },\n        _actualizeTriggers: function _actualizeTriggers() {\n            var _this2 = this;\n\n            var $toBind = this._findRelated();\n\n            var trigger; // Remove Parsley events already bound on this field\n\n            $toBind.off('.Parsley');\n            if (this._failedOnce) $toBind.on(Utils.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), function () {\n                _this2._validateIfNeeded();\n            });else if (trigger = Utils.namespaceEvents(this.options.trigger, 'Parsley')) {\n                $toBind.on(trigger, function (event) {\n                    _this2._validateIfNeeded(event);\n                });\n            }\n        },\n        _validateIfNeeded: function _validateIfNeeded(event) {\n            var _this3 = this;\n\n            // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n            // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n            // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n            if (event && /key|input/.test(event.type)) if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold) return;\n\n            if (this.options.debounce) {\n                window.clearTimeout(this._debounced);\n                this._debounced = window.setTimeout(function () {\n                    return _this3.validate();\n                }, this.options.debounce);\n            } else this.validate();\n        },\n        _resetUI: function _resetUI() {\n            // Reset all event listeners\n            this._failedOnce = false;\n\n            this._actualizeTriggers(); // Nothing to do if UI never initialized for this field\n\n\n            if ('undefined' === typeof this._ui) return; // Reset all errors' li\n\n            this._ui.$errorsWrapper.removeClass('filled').children().remove(); // Reset validation class\n\n\n            this._resetClass(); // Reset validation flags and last validation result\n\n\n            this._ui.lastValidationResult = [];\n            this._ui.validationInformationVisible = false;\n        },\n        _destroyUI: function _destroyUI() {\n            this._resetUI();\n\n            if ('undefined' !== typeof this._ui) this._ui.$errorsWrapper.remove();\n            delete this._ui;\n        },\n        _successClass: function _successClass() {\n            this._ui.validationInformationVisible = true;\n\n            this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n        },\n        _errorClass: function _errorClass() {\n            this._ui.validationInformationVisible = true;\n\n            this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n        },\n        _resetClass: function _resetClass() {\n            this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n        }\n    };\n\n    var Form = function Form(element, domOptions, options) {\n        this.__class__ = 'Form';\n        this.element = element;\n        this.$element = $(element);\n        this.domOptions = domOptions;\n        this.options = options;\n        this.parent = window.Parsley;\n        this.fields = [];\n        this.validationResult = null;\n    };\n\n    var statusMapping = {\n        pending: null,\n        resolved: true,\n        rejected: false\n    };\n    Form.prototype = {\n        onSubmitValidate: function onSubmitValidate(event) {\n            var _this = this;\n\n            // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n            if (true === event.parsley) return; // If we didn't come here through a submit button, use the first one in the form\n\n            var submitSource = this._submitSource || this.$element.find(Utils._SubmitSelector)[0];\n            this._submitSource = null;\n            this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);\n            if (submitSource && null !== submitSource.getAttribute('formnovalidate')) return;\n            window.Parsley._remoteCache = {};\n            var promise = this.whenValidate({\n                event: event\n            });\n\n            if ('resolved' === promise.state() && false !== this._trigger('submit')) ; else {\n                // Rejected or pending: cancel this submit\n                event.stopImmediatePropagation();\n                event.preventDefault();\n                if ('pending' === promise.state()) promise.done(function () {\n                    _this._submit(submitSource);\n                });\n            }\n        },\n        onSubmitButton: function onSubmitButton(event) {\n            this._submitSource = event.currentTarget;\n        },\n        // internal\n        // _submit submits the form, this time without going through the validations.\n        // Care must be taken to \"fake\" the actual submit button being clicked.\n        _submit: function _submit(submitSource) {\n            if (false === this._trigger('submit')) return; // Add submit button's data\n\n            if (submitSource) {\n                var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);\n                if (0 === $synthetic.length) $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n                $synthetic.attr({\n                    name: submitSource.getAttribute('name'),\n                    value: submitSource.getAttribute('value')\n                });\n            }\n\n            this.$element.trigger(_extends($.Event('submit'), {\n                parsley: true\n            }));\n        },\n        // Performs validation on fields while triggering events.\n        // @returns `true` if all validations succeeds, `false`\n        // if a failure is immediately detected, or `null`\n        // if dependant on a promise.\n        // Consider using `whenValidate` instead.\n        validate: function validate(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');\n\n                var _arguments = Array.prototype.slice.call(arguments),\n                    group = _arguments[0],\n                    force = _arguments[1],\n                    event = _arguments[2];\n\n                options = {\n                    group: group,\n                    force: force,\n                    event: event\n                };\n            }\n\n            return statusMapping[this.whenValidate(options).state()];\n        },\n        whenValidate: function whenValidate() {\n            var _this2 = this,\n                _Utils$all$done$fail$;\n\n            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                group = _ref.group,\n                force = _ref.force,\n                event = _ref.event;\n\n            this.submitEvent = event;\n\n            if (event) {\n                this.submitEvent = _extends({}, event, {\n                    preventDefault: function preventDefault() {\n                        Utils.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n                        _this2.validationResult = false;\n                    }\n                });\n            }\n\n            this.validationResult = true; // fire validate event to eventually modify things before every validation\n\n            this._trigger('validate'); // Refresh form DOM options and form's fields that could have changed\n\n\n            this._refreshFields();\n\n            var promises = this._withoutReactualizingFormOptions(function () {\n                return $.map(_this2.fields, function (field) {\n                    return field.whenValidate({\n                        force: force,\n                        group: group\n                    });\n                });\n            });\n\n            return (_Utils$all$done$fail$ = Utils.all(promises).done(function () {\n                _this2._trigger('success');\n            }).fail(function () {\n                _this2.validationResult = false;\n\n                _this2.focus();\n\n                _this2._trigger('error');\n            }).always(function () {\n                _this2._trigger('validated');\n            })).pipe.apply(_Utils$all$done$fail$, _toConsumableArray(this._pipeAccordingToValidationResult()));\n        },\n        // Iterate over refreshed fields, and stop on first failure.\n        // Returns `true` if all fields are valid, `false` if a failure is detected\n        // or `null` if the result depends on an unresolved promise.\n        // Prefer using `whenValid` instead.\n        isValid: function isValid(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');\n\n                var _arguments2 = Array.prototype.slice.call(arguments),\n                    group = _arguments2[0],\n                    force = _arguments2[1];\n\n                options = {\n                    group: group,\n                    force: force\n                };\n            }\n\n            return statusMapping[this.whenValid(options).state()];\n        },\n        // Iterate over refreshed fields and validate them.\n        // Returns a promise.\n        // A validation that immediately fails will interrupt the validations.\n        whenValid: function whenValid() {\n            var _this3 = this;\n\n            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                group = _ref2.group,\n                force = _ref2.force;\n\n            this._refreshFields();\n\n            var promises = this._withoutReactualizingFormOptions(function () {\n                return $.map(_this3.fields, function (field) {\n                    return field.whenValid({\n                        group: group,\n                        force: force\n                    });\n                });\n            });\n\n            return Utils.all(promises);\n        },\n        refresh: function refresh() {\n            this._refreshFields();\n\n            return this;\n        },\n        // Reset UI\n        reset: function reset() {\n            // Form case: emit a reset event for each field\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fields[i].reset();\n            }\n\n            this._trigger('reset');\n        },\n        // Destroy Parsley instance (+ UI)\n        destroy: function destroy() {\n            // Field case: emit destroy event to clean UI and then destroy stored instance\n            this._destroyUI(); // Form case: destroy all its fields and then destroy stored instance\n\n\n            for (var i = 0; i < this.fields.length; i++) {\n                this.fields[i].destroy();\n            }\n\n            this.$element.removeData('Parsley');\n\n            this._trigger('destroy');\n        },\n        _refreshFields: function _refreshFields() {\n            return this.actualizeOptions()._bindFields();\n        },\n        _bindFields: function _bindFields() {\n            var _this4 = this;\n\n            var oldFields = this.fields;\n            this.fields = [];\n            this.fieldsMappedById = {};\n\n            this._withoutReactualizingFormOptions(function () {\n                _this4.$element.find(_this4.options.inputs).not(_this4.options.excluded).not(\"[\".concat(_this4.options.namespace, \"excluded=true]\")).each(function (_, element) {\n                    var fieldInstance = new window.Parsley.Factory(element, {}, _this4); // Only add valid and not excluded `Field` and `FieldMultiple` children\n\n                    if ('Field' === fieldInstance.__class__ || 'FieldMultiple' === fieldInstance.__class__) {\n                        var uniqueId = fieldInstance.__class__ + '-' + fieldInstance.__id__;\n\n                        if ('undefined' === typeof _this4.fieldsMappedById[uniqueId]) {\n                            _this4.fieldsMappedById[uniqueId] = fieldInstance;\n\n                            _this4.fields.push(fieldInstance);\n                        }\n                    }\n                });\n\n                $.each(Utils.difference(oldFields, _this4.fields), function (_, field) {\n                    field.reset();\n                });\n            });\n\n            return this;\n        },\n        // Internal only.\n        // Looping on a form's fields to do validation or similar\n        // will trigger reactualizing options on all of them, which\n        // in turn will reactualize the form's options.\n        // To avoid calling actualizeOptions so many times on the form\n        // for nothing, _withoutReactualizingFormOptions temporarily disables\n        // the method actualizeOptions on this form while `fn` is called.\n        _withoutReactualizingFormOptions: function _withoutReactualizingFormOptions(fn) {\n            var oldActualizeOptions = this.actualizeOptions;\n\n            this.actualizeOptions = function () {\n                return this;\n            };\n\n            var result = fn();\n            this.actualizeOptions = oldActualizeOptions;\n            return result;\n        },\n        // Internal only.\n        // Shortcut to trigger an event\n        // Returns true iff event is not interrupted and default not prevented.\n        _trigger: function _trigger(eventName) {\n            return this.trigger('form:' + eventName);\n        }\n    };\n\n    var Constraint = function Constraint(parsleyField, name, requirements, priority, isDomConstraint) {\n        var validatorSpec = window.Parsley._validatorRegistry.validators[name];\n        var validator = new Validator(validatorSpec);\n        priority = priority || parsleyField.options[name + 'Priority'] || validator.priority;\n        isDomConstraint = true === isDomConstraint;\n\n        _extends(this, {\n            validator: validator,\n            name: name,\n            requirements: requirements,\n            priority: priority,\n            isDomConstraint: isDomConstraint\n        });\n\n        this._parseRequirements(parsleyField.options);\n    };\n\n    var capitalize = function capitalize(str) {\n        var cap = str[0].toUpperCase();\n        return cap + str.slice(1);\n    };\n\n    Constraint.prototype = {\n        validate: function validate(value, instance) {\n            var _this$validator;\n\n            return (_this$validator = this.validator).validate.apply(_this$validator, [value].concat(_toConsumableArray(this.requirementList), [instance]));\n        },\n        _parseRequirements: function _parseRequirements(options) {\n            var _this = this;\n\n            this.requirementList = this.validator.parseRequirements(this.requirements, function (key) {\n                return options[_this.name + capitalize(key)];\n            });\n        }\n    };\n\n    var Field = function Field(field, domOptions, options, parsleyFormInstance) {\n        this.__class__ = 'Field';\n        this.element = field;\n        this.$element = $(field); // Set parent if we have one\n\n        if ('undefined' !== typeof parsleyFormInstance) {\n            this.parent = parsleyFormInstance;\n        }\n\n        this.options = options;\n        this.domOptions = domOptions; // Initialize some properties\n\n        this.constraints = [];\n        this.constraintsByName = {};\n        this.validationResult = true; // Bind constraints\n\n        this._bindConstraints();\n    };\n\n    var statusMapping$1 = {\n        pending: null,\n        resolved: true,\n        rejected: false\n    };\n    Field.prototype = {\n        // # Public API\n        // Validate field and trigger some events for mainly `UI`\n        // @returns `true`, an array of the validators that failed, or\n        // `null` if validation is not finished. Prefer using whenValidate\n        validate: function validate(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');\n                options = {\n                    options: options\n                };\n            }\n\n            var promise = this.whenValidate(options);\n            if (!promise) // If excluded with `group` option\n                return true;\n\n            switch (promise.state()) {\n                case 'pending':\n                    return null;\n\n                case 'resolved':\n                    return true;\n\n                case 'rejected':\n                    return this.validationResult;\n            }\n        },\n        // Validate field and trigger some events for mainly `UI`\n        // @returns a promise that succeeds only when all validations do\n        // or `undefined` if field is not in the given `group`.\n        whenValidate: function whenValidate() {\n            var _this$whenValid$alway,\n                _this = this;\n\n            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                force = _ref.force,\n                group = _ref.group;\n\n            // do not validate a field if not the same as given validation group\n            this.refresh();\n            if (group && !this._isInGroup(group)) return;\n            this.value = this.getValue(); // Field Validate event. `this.value` could be altered for custom needs\n\n            this._trigger('validate');\n\n            return (_this$whenValid$alway = this.whenValid({\n                force: force,\n                value: this.value,\n                _refreshed: true\n            }).always(function () {\n                _this._reflowUI();\n            }).done(function () {\n                _this._trigger('success');\n            }).fail(function () {\n                _this._trigger('error');\n            }).always(function () {\n                _this._trigger('validated');\n            })).pipe.apply(_this$whenValid$alway, _toConsumableArray(this._pipeAccordingToValidationResult()));\n        },\n        hasConstraints: function hasConstraints() {\n            return 0 !== this.constraints.length;\n        },\n        // An empty optional field does not need validation\n        needsValidation: function needsValidation(value) {\n            if ('undefined' === typeof value) value = this.getValue(); // If a field is empty and not required, it is valid\n            // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n\n            if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty) return false;\n            return true;\n        },\n        _isInGroup: function _isInGroup(group) {\n            if (Array.isArray(this.options.group)) return -1 !== $.inArray(group, this.options.group);\n            return this.options.group === group;\n        },\n        // Just validate field. Do not trigger any event.\n        // Returns `true` iff all constraints pass, `false` if there are failures,\n        // or `null` if the result can not be determined yet (depends on a promise)\n        // See also `whenValid`.\n        isValid: function isValid(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');\n\n                var _arguments = Array.prototype.slice.call(arguments),\n                    force = _arguments[0],\n                    value = _arguments[1];\n\n                options = {\n                    force: force,\n                    value: value\n                };\n            }\n\n            var promise = this.whenValid(options);\n            if (!promise) // Excluded via `group`\n                return true;\n            return statusMapping$1[promise.state()];\n        },\n        // Just validate field. Do not trigger any event.\n        // @returns a promise that succeeds only when all validations do\n        // or `undefined` if the field is not in the given `group`.\n        // The argument `force` will force validation of empty fields.\n        // If a `value` is given, it will be validated instead of the value of the input.\n        whenValid: function whenValid() {\n            var _this2 = this;\n\n            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref2$force = _ref2.force,\n                force = _ref2$force === void 0 ? false : _ref2$force,\n                value = _ref2.value,\n                group = _ref2.group,\n                _refreshed = _ref2._refreshed;\n\n            // Recompute options and rebind constraints to have latest changes\n            if (!_refreshed) this.refresh(); // do not validate a field if not the same as given validation group\n\n            if (group && !this._isInGroup(group)) return;\n            this.validationResult = true; // A field without constraint is valid\n\n            if (!this.hasConstraints()) return $.when(); // Value could be passed as argument, needed to add more power to 'field:validate'\n\n            if ('undefined' === typeof value || null === value) value = this.getValue();\n            if (!this.needsValidation(value) && true !== force) return $.when();\n\n            var groupedConstraints = this._getGroupedConstraints();\n\n            var promises = [];\n            $.each(groupedConstraints, function (_, constraints) {\n                // Process one group of constraints at a time, we validate the constraints\n                // and combine the promises together.\n                var promise = Utils.all($.map(constraints, function (constraint) {\n                    return _this2._validateConstraint(value, constraint);\n                }));\n                promises.push(promise);\n                if (promise.state() === 'rejected') return false; // Interrupt processing if a group has already failed\n            });\n            return Utils.all(promises);\n        },\n        // @returns a promise\n        _validateConstraint: function _validateConstraint(value, constraint) {\n            var _this3 = this;\n\n            var result = constraint.validate(value, this); // Map false to a failed promise\n\n            if (false === result) result = $.Deferred().reject(); // Make sure we return a promise and that we record failures\n\n            return Utils.all([result]).fail(function (errorMessage) {\n                if (!(_this3.validationResult instanceof Array)) _this3.validationResult = [];\n\n                _this3.validationResult.push({\n                    assert: constraint,\n                    errorMessage: 'string' === typeof errorMessage && errorMessage\n                });\n            });\n        },\n        // @returns Parsley field computed value that could be overrided or configured in DOM\n        getValue: function getValue() {\n            var value; // Value could be overriden in DOM or with explicit options\n\n            if ('function' === typeof this.options.value) value = this.options.value(this);else if ('undefined' !== typeof this.options.value) value = this.options.value;else value = this.$element.val(); // Handle wrong DOM or configurations\n\n            if ('undefined' === typeof value || null === value) return '';\n            return this._handleWhitespace(value);\n        },\n        // Reset UI\n        reset: function reset() {\n            this._resetUI();\n\n            return this._trigger('reset');\n        },\n        // Destroy Parsley instance (+ UI)\n        destroy: function destroy() {\n            // Field case: emit destroy event to clean UI and then destroy stored instance\n            this._destroyUI();\n\n            this.$element.removeData('Parsley');\n            this.$element.removeData('FieldMultiple');\n\n            this._trigger('destroy');\n        },\n        // Actualize options and rebind constraints\n        refresh: function refresh() {\n            this._refreshConstraints();\n\n            return this;\n        },\n        _refreshConstraints: function _refreshConstraints() {\n            return this.actualizeOptions()._bindConstraints();\n        },\n        refreshConstraints: function refreshConstraints() {\n            Utils.warnOnce(\"Parsley's refreshConstraints is deprecated. Please use refresh\");\n            return this.refresh();\n        },\n\n        /**\n         * Add a new constraint to a field\n         *\n         * @param {String}   name\n         * @param {Mixed}    requirements      optional\n         * @param {Number}   priority          optional\n         * @param {Boolean}  isDomConstraint   optional\n         */\n        addConstraint: function addConstraint(name, requirements, priority, isDomConstraint) {\n            if (window.Parsley._validatorRegistry.validators[name]) {\n                var constraint = new Constraint(this, name, requirements, priority, isDomConstraint); // if constraint already exist, delete it and push new version\n\n                if ('undefined' !== this.constraintsByName[constraint.name]) this.removeConstraint(constraint.name);\n                this.constraints.push(constraint);\n                this.constraintsByName[constraint.name] = constraint;\n            }\n\n            return this;\n        },\n        // Remove a constraint\n        removeConstraint: function removeConstraint(name) {\n            for (var i = 0; i < this.constraints.length; i++) {\n                if (name === this.constraints[i].name) {\n                    this.constraints.splice(i, 1);\n                    break;\n                }\n            }\n\n            delete this.constraintsByName[name];\n            return this;\n        },\n        // Update a constraint (Remove + re-add)\n        updateConstraint: function updateConstraint(name, parameters, priority) {\n            return this.removeConstraint(name).addConstraint(name, parameters, priority);\n        },\n        // # Internals\n        // Internal only.\n        // Bind constraints from config + options + DOM\n        _bindConstraints: function _bindConstraints() {\n            var constraints = [];\n            var constraintsByName = {}; // clean all existing DOM constraints to only keep javascript user constraints\n\n            for (var i = 0; i < this.constraints.length; i++) {\n                if (false === this.constraints[i].isDomConstraint) {\n                    constraints.push(this.constraints[i]);\n                    constraintsByName[this.constraints[i].name] = this.constraints[i];\n                }\n            }\n\n            this.constraints = constraints;\n            this.constraintsByName = constraintsByName; // then re-add Parsley DOM-API constraints\n\n            for (var name in this.options) {\n                this.addConstraint(name, this.options[name], undefined, true);\n            } // finally, bind special HTML5 constraints\n\n\n            return this._bindHtml5Constraints();\n        },\n        // Internal only.\n        // Bind specific HTML5 constraints to be HTML5 compliant\n        _bindHtml5Constraints: function _bindHtml5Constraints() {\n            // html5 required\n            if (null !== this.element.getAttribute('required')) this.addConstraint('required', true, undefined, true); // html5 pattern\n\n            if (null !== this.element.getAttribute('pattern')) this.addConstraint('pattern', this.element.getAttribute('pattern'), undefined, true); // range\n\n            var min = this.element.getAttribute('min');\n            var max = this.element.getAttribute('max');\n            if (null !== min && null !== max) this.addConstraint('range', [min, max], undefined, true); // HTML5 min\n            else if (null !== min) this.addConstraint('min', min, undefined, true); // HTML5 max\n            else if (null !== max) this.addConstraint('max', max, undefined, true); // length\n\n            if (null !== this.element.getAttribute('minlength') && null !== this.element.getAttribute('maxlength')) this.addConstraint('length', [this.element.getAttribute('minlength'), this.element.getAttribute('maxlength')], undefined, true); // HTML5 minlength\n            else if (null !== this.element.getAttribute('minlength')) this.addConstraint('minlength', this.element.getAttribute('minlength'), undefined, true); // HTML5 maxlength\n            else if (null !== this.element.getAttribute('maxlength')) this.addConstraint('maxlength', this.element.getAttribute('maxlength'), undefined, true); // html5 types\n\n            var type = Utils.getType(this.element); // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n\n            if ('number' === type) {\n                return this.addConstraint('type', ['number', {\n                    step: this.element.getAttribute('step') || '1',\n                    base: min || this.element.getAttribute('value')\n                }], undefined, true); // Regular other HTML5 supported types\n            } else if (/^(email|url|range|date)$/i.test(type)) {\n                return this.addConstraint('type', type, undefined, true);\n            }\n\n            return this;\n        },\n        // Internal only.\n        // Field is required if have required constraint without `false` value\n        _isRequired: function _isRequired() {\n            if ('undefined' === typeof this.constraintsByName.required) return false;\n            return false !== this.constraintsByName.required.requirements;\n        },\n        // Internal only.\n        // Shortcut to trigger an event\n        _trigger: function _trigger(eventName) {\n            return this.trigger('field:' + eventName);\n        },\n        // Internal only\n        // Handles whitespace in a value\n        // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n        // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n        _handleWhitespace: function _handleWhitespace(value) {\n            if (true === this.options.trimValue) Utils.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n            if ('squish' === this.options.whitespace) value = value.replace(/\\s{2,}/g, ' ');\n            if ('trim' === this.options.whitespace || 'squish' === this.options.whitespace || true === this.options.trimValue) value = Utils.trimString(value);\n            return value;\n        },\n        _isDateInput: function _isDateInput() {\n            var c = this.constraintsByName.type;\n            return c && c.requirements === 'date';\n        },\n        // Internal only.\n        // Returns the constraints, grouped by descending priority.\n        // The result is thus an array of arrays of constraints.\n        _getGroupedConstraints: function _getGroupedConstraints() {\n            if (false === this.options.priorityEnabled) return [this.constraints];\n            var groupedConstraints = [];\n            var index = {}; // Create array unique of priorities\n\n            for (var i = 0; i < this.constraints.length; i++) {\n                var p = this.constraints[i].priority;\n                if (!index[p]) groupedConstraints.push(index[p] = []);\n                index[p].push(this.constraints[i]);\n            } // Sort them by priority DESC\n\n\n            groupedConstraints.sort(function (a, b) {\n                return b[0].priority - a[0].priority;\n            });\n            return groupedConstraints;\n        }\n    };\n\n    var Multiple = function Multiple() {\n        this.__class__ = 'FieldMultiple';\n    };\n\n    Multiple.prototype = {\n        // Add new `$element` sibling for multiple field\n        addElement: function addElement($element) {\n            this.$elements.push($element);\n            return this;\n        },\n        // See `Field._refreshConstraints()`\n        _refreshConstraints: function _refreshConstraints() {\n            var fieldConstraints;\n            this.constraints = []; // Select multiple special treatment\n\n            if (this.element.nodeName === 'SELECT') {\n                this.actualizeOptions()._bindConstraints();\n\n                return this;\n            } // Gather all constraints for each input in the multiple group\n\n\n            for (var i = 0; i < this.$elements.length; i++) {\n                // Check if element have not been dynamically removed since last binding\n                if (!$('html').has(this.$elements[i]).length) {\n                    this.$elements.splice(i, 1);\n                    continue;\n                }\n\n                fieldConstraints = this.$elements[i].data('FieldMultiple')._refreshConstraints().constraints;\n\n                for (var j = 0; j < fieldConstraints.length; j++) {\n                    this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n                }\n            }\n\n            return this;\n        },\n        // See `Field.getValue()`\n        getValue: function getValue() {\n            // Value could be overriden in DOM\n            if ('function' === typeof this.options.value) return this.options.value(this);else if ('undefined' !== typeof this.options.value) return this.options.value; // Radio input case\n\n            if (this.element.nodeName === 'INPUT') {\n                var type = Utils.getType(this.element);\n                if (type === 'radio') return this._findRelated().filter(':checked').val() || ''; // checkbox input case\n\n                if (type === 'checkbox') {\n                    var values = [];\n\n                    this._findRelated().filter(':checked').each(function () {\n                        values.push($(this).val());\n                    });\n\n                    return values;\n                }\n            } // Select multiple case\n\n\n            if (this.element.nodeName === 'SELECT' && null === this.$element.val()) return []; // Default case that should never happen\n\n            return this.$element.val();\n        },\n        _init: function _init() {\n            this.$elements = [this.$element];\n            return this;\n        }\n    };\n\n    var Factory = function Factory(element, options, parsleyFormInstance) {\n        this.element = element;\n        this.$element = $(element); // If the element has already been bound, returns its saved Parsley instance\n\n        var savedparsleyFormInstance = this.$element.data('Parsley');\n\n        if (savedparsleyFormInstance) {\n            // If the saved instance has been bound without a Form parent and there is one given in this call, add it\n            if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n                savedparsleyFormInstance.parent = parsleyFormInstance;\n\n                savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n            }\n\n            if ('object' === _typeof(options)) {\n                _extends(savedparsleyFormInstance.options, options);\n            }\n\n            return savedparsleyFormInstance;\n        } // Parsley must be instantiated with a DOM element or jQuery $element\n\n\n        if (!this.$element.length) throw new Error('You must bind Parsley on an existing element.');\n        if ('undefined' !== typeof parsleyFormInstance && 'Form' !== parsleyFormInstance.__class__) throw new Error('Parent instance must be a Form instance');\n        this.parent = parsleyFormInstance || window.Parsley;\n        return this.init(options);\n    };\n\n    Factory.prototype = {\n        init: function init(options) {\n            this.__class__ = 'Parsley';\n            this.__version__ = '2.9.1';\n            this.__id__ = Utils.generateID(); // Pre-compute options\n\n            this._resetOptions(options); // A Form instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n\n\n            if (this.element.nodeName === 'FORM' || Utils.checkAttr(this.element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)) return this.bind('parsleyForm'); // Every other element is bound as a `Field` or `FieldMultiple`\n\n            return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');\n        },\n        isMultiple: function isMultiple() {\n            var type = Utils.getType(this.element);\n            return type === 'radio' || type === 'checkbox' || this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple');\n        },\n        // Multiples fields are a real nightmare :(\n        // Maybe some refactoring would be appreciated here...\n        handleMultiple: function handleMultiple() {\n            var _this = this;\n\n            var name;\n            var parsleyMultipleInstance; // Handle multiple name\n\n            this.options.multiple = this.options.multiple || (name = this.element.getAttribute('name')) || this.element.getAttribute('id'); // Special select multiple input\n\n            if (this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple')) {\n                this.options.multiple = this.options.multiple || this.__id__;\n                return this.bind('parsleyFieldMultiple'); // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n            } else if (!this.options.multiple) {\n                Utils.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);\n                return this;\n            } // Remove special chars\n\n\n            this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, ''); // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n\n            if (name) {\n                $('input[name=\"' + name + '\"]').each(function (i, input) {\n                    var type = Utils.getType(input);\n                    if (type === 'radio' || type === 'checkbox') input.setAttribute(_this.options.namespace + 'multiple', _this.options.multiple);\n                });\n            } // Check here if we don't already have a related multiple instance saved\n\n\n            var $previouslyRelated = this._findRelated();\n\n            for (var i = 0; i < $previouslyRelated.length; i++) {\n                parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');\n\n                if ('undefined' !== typeof parsleyMultipleInstance) {\n                    if (!this.$element.data('FieldMultiple')) {\n                        parsleyMultipleInstance.addElement(this.$element);\n                    }\n\n                    break;\n                }\n            } // Create a secret Field instance for every multiple field. It will be stored in `data('FieldMultiple')`\n            // And will be useful later to access classic `Field` stuff while being in a `FieldMultiple` instance\n\n\n            this.bind('parsleyField', true);\n            return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');\n        },\n        // Return proper `Form`, `Field` or `FieldMultiple`\n        bind: function bind(type, doNotStore) {\n            var parsleyInstance;\n\n            switch (type) {\n                case 'parsleyForm':\n                    parsleyInstance = $.extend(new Form(this.element, this.domOptions, this.options), new Base(), window.ParsleyExtend)._bindFields();\n                    break;\n\n                case 'parsleyField':\n                    parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Base(), window.ParsleyExtend);\n                    break;\n\n                case 'parsleyFieldMultiple':\n                    parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Multiple(), new Base(), window.ParsleyExtend)._init();\n                    break;\n\n                default:\n                    throw new Error(type + 'is not a supported Parsley type');\n            }\n\n            if (this.options.multiple) Utils.setAttr(this.element, this.options.namespace, 'multiple', this.options.multiple);\n\n            if ('undefined' !== typeof doNotStore) {\n                this.$element.data('FieldMultiple', parsleyInstance);\n                return parsleyInstance;\n            } // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n\n\n            this.$element.data('Parsley', parsleyInstance); // Tell the world we have a new Form or Field instance!\n\n            parsleyInstance._actualizeTriggers();\n\n            parsleyInstance._trigger('init');\n\n            return parsleyInstance;\n        }\n    };\n\n    var vernums = $.fn.jquery.split('.');\n\n    if (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {\n        throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n    }\n\n    if (!vernums.forEach) {\n        Utils.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');\n    } // Inherit `on`, `off` & `trigger` to Parsley:\n\n\n    var Parsley = _extends(new Base(), {\n        element: document,\n        $element: $(document),\n        actualizeOptions: null,\n        _resetOptions: null,\n        Factory: Factory,\n        version: '2.9.1'\n    }); // Supplement Field and Form with Base\n    // This way, the constructors will have access to those methods\n\n\n    _extends(Field.prototype, UI.Field, Base.prototype);\n\n    _extends(Form.prototype, UI.Form, Base.prototype); // Inherit actualizeOptions and _resetOptions:\n\n\n    _extends(Factory.prototype, Base.prototype); // ### jQuery API\n    // `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n\n\n    $.fn.parsley = $.fn.psly = function (options) {\n        if (this.length > 1) {\n            var instances = [];\n            this.each(function () {\n                instances.push($(this).parsley(options));\n            });\n            return instances;\n        } // Return undefined if applied to non existing DOM element\n\n\n        if (this.length == 0) {\n            return;\n        }\n\n        return new Factory(this[0], options);\n    }; // ### Field and Form extension\n    // Ensure the extension is now defined if it wasn't previously\n\n\n    if ('undefined' === typeof window.ParsleyExtend) window.ParsleyExtend = {}; // ### Parsley config\n    // Inherit from ParsleyDefault, and copy over any existing values\n\n    Parsley.options = _extends(Utils.objectCreate(Defaults), window.ParsleyConfig);\n    window.ParsleyConfig = Parsley.options; // Old way of accessing global options\n    // ### Globals\n\n    window.Parsley = window.psly = Parsley;\n    Parsley.Utils = Utils;\n    window.ParsleyUtils = {};\n    $.each(Utils, function (key, value) {\n        if ('function' === typeof value) {\n            window.ParsleyUtils[key] = function () {\n                Utils.warnOnce('Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead.');\n                return Utils[key].apply(Utils, arguments);\n            };\n        }\n    }); // ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\n\n    var registry = window.Parsley._validatorRegistry = new ValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\n    window.ParsleyValidator = {};\n    $.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator'.split(' '), function (i, method) {\n        window.Parsley[method] = function () {\n            return registry[method].apply(registry, arguments);\n        };\n\n        window.ParsleyValidator[method] = function () {\n            var _window$Parsley;\n\n            Utils.warnOnce(\"Accessing the method '\".concat(method, \"' through Validator is deprecated. Simply call 'window.Parsley.\").concat(method, \"(...)'\"));\n            return (_window$Parsley = window.Parsley)[method].apply(_window$Parsley, arguments);\n        };\n    }); // ### UI\n    // Deprecated global object\n\n    window.Parsley.UI = UI;\n    window.ParsleyUI = {\n        removeError: function removeError(instance, name, doNotUpdateClass) {\n            var updateClass = true !== doNotUpdateClass;\n            Utils.warnOnce(\"Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method.\");\n            return instance.removeError(name, {\n                updateClass: updateClass\n            });\n        },\n        getErrorsMessages: function getErrorsMessages(instance) {\n            Utils.warnOnce(\"Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly.\");\n            return instance.getErrorsMessages();\n        }\n    };\n    $.each('addError updateError'.split(' '), function (i, method) {\n        window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {\n            var updateClass = true !== doNotUpdateClass;\n            Utils.warnOnce(\"Accessing UI is deprecated. Call '\".concat(method, \"' on the instance directly. Please comment in issue 1073 as to your need to call this method.\"));\n            return instance[method](name, {\n                message: message,\n                assert: assert,\n                updateClass: updateClass\n            });\n        };\n    }); // ### PARSLEY auto-binding\n    // Prevent it by setting `ParsleyConfig.autoBind` to `false`\n\n    if (false !== window.ParsleyConfig.autoBind) {\n        $(function () {\n            // Works only on `data-parsley-validate`.\n            if ($('[data-parsley-validate]').length) $('[data-parsley-validate]').parsley();\n        });\n    }\n\n    var o = $({});\n\n    var deprecated = function deprecated() {\n        Utils.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n    }; // Returns an event handler that calls `fn` with the arguments it expects\n\n\n    function adapt(fn, context) {\n        // Store to allow unbinding\n        if (!fn.parsleyAdaptedCallback) {\n            fn.parsleyAdaptedCallback = function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                args.unshift(this);\n                fn.apply(context || o, args);\n            };\n        }\n\n        return fn.parsleyAdaptedCallback;\n    }\n\n    var eventPrefix = 'parsley:'; // Converts 'parsley:form:validate' into 'form:validate'\n\n    function eventName(name) {\n        if (name.lastIndexOf(eventPrefix, 0) === 0) return name.substr(eventPrefix.length);\n        return name;\n    } // $.listen is deprecated. Use Parsley.on instead.\n\n\n    $.listen = function (name, callback) {\n        var context;\n        deprecated();\n\n        if ('object' === _typeof(arguments[1]) && 'function' === typeof arguments[2]) {\n            context = arguments[1];\n            callback = arguments[2];\n        }\n\n        if ('function' !== typeof callback) throw new Error('Wrong parameters');\n        window.Parsley.on(eventName(name), adapt(callback, context));\n    };\n\n    $.listenTo = function (instance, name, fn) {\n        deprecated();\n        if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error('Must give Parsley instance');\n        if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong parameters');\n        instance.on(eventName(name), adapt(fn));\n    };\n\n    $.unsubscribe = function (name, fn) {\n        deprecated();\n        if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong arguments');\n        window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n    };\n\n    $.unsubscribeTo = function (instance, name) {\n        deprecated();\n        if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error('Must give Parsley instance');\n        instance.off(eventName(name));\n    };\n\n    $.unsubscribeAll = function (name) {\n        deprecated();\n        window.Parsley.off(eventName(name));\n        $('form,input,textarea,select').each(function () {\n            var instance = $(this).data('Parsley');\n\n            if (instance) {\n                instance.off(eventName(name));\n            }\n        });\n    }; // $.emit is deprecated. Use jQuery events instead.\n\n\n    $.emit = function (name, instance) {\n        var _instance;\n\n        deprecated();\n        var instanceGiven = instance instanceof Field || instance instanceof Form;\n        var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n        args.unshift(eventName(name));\n\n        if (!instanceGiven) {\n            instance = window.Parsley;\n        }\n\n        (_instance = instance).trigger.apply(_instance, _toConsumableArray(args));\n    };\n\n    $.extend(true, Parsley, {\n        asyncValidators: {\n            'default': {\n                fn: function fn(xhr) {\n                    // By default, only status 2xx are deemed successful.\n                    // Note: we use status instead of state() because responses with status 200\n                    // but invalid messages (e.g. an empty body for content type set to JSON) will\n                    // result in state() === 'rejected'.\n                    return xhr.status >= 200 && xhr.status < 300;\n                },\n                url: false\n            },\n            reverse: {\n                fn: function fn(xhr) {\n                    // If reverse option is set, a failing ajax request is considered successful\n                    return xhr.status < 200 || xhr.status >= 300;\n                },\n                url: false\n            }\n        },\n        addAsyncValidator: function addAsyncValidator(name, fn, url, options) {\n            Parsley.asyncValidators[name] = {\n                fn: fn,\n                url: url || false,\n                options: options || {}\n            };\n            return this;\n        }\n    });\n    Parsley.addValidator('remote', {\n        requirementType: {\n            '': 'string',\n            'validator': 'string',\n            'reverse': 'boolean',\n            'options': 'object'\n        },\n        validateString: function validateString(value, url, options, instance) {\n            var data = {};\n            var ajaxOptions;\n            var csr;\n            var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');\n            if ('undefined' === typeof Parsley.asyncValidators[validator]) throw new Error('Calling an undefined async validator: `' + validator + '`');\n            url = Parsley.asyncValidators[validator].url || url; // Fill current value\n\n            if (url.indexOf('{value}') > -1) {\n                url = url.replace('{value}', encodeURIComponent(value));\n            } else {\n                data[instance.element.getAttribute('name') || instance.element.getAttribute('id')] = value;\n            } // Merge options passed in from the function with the ones in the attribute\n\n\n            var remoteOptions = $.extend(true, options.options || {}, Parsley.asyncValidators[validator].options); // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n\n            ajaxOptions = $.extend(true, {}, {\n                url: url,\n                data: data,\n                type: 'GET'\n            }, remoteOptions); // Generate store key based on ajax options\n\n            instance.trigger('field:ajaxoptions', instance, ajaxOptions);\n            csr = $.param(ajaxOptions); // Initialise querry cache\n\n            if ('undefined' === typeof Parsley._remoteCache) Parsley._remoteCache = {}; // Try to retrieve stored xhr\n\n            var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n\n            var handleXhr = function handleXhr() {\n                var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n                if (!result) // Map falsy results to rejected promise\n                    result = $.Deferred().reject();\n                return $.when(result);\n            };\n\n            return xhr.then(handleXhr, handleXhr);\n        },\n        priority: -1\n    });\n    Parsley.on('form:submit', function () {\n        Parsley._remoteCache = {};\n    });\n\n    Base.prototype.addAsyncValidator = function () {\n        Utils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');\n        return Parsley.addAsyncValidator.apply(Parsley, arguments);\n    };\n\n    // This is included with the Parsley library itself,\n    Parsley.addMessages('en', {\n        defaultMessage: \"This value seems to be invalid.\",\n        type: {\n            email: \"This value should be a valid email.\",\n            url: \"This value should be a valid url.\",\n            number: \"This value should be a valid number.\",\n            integer: \"This value should be a valid integer.\",\n            digits: \"This value should be digits.\",\n            alphanum: \"This value should be alphanumeric.\"\n        },\n        notblank: \"This value should not be blank.\",\n        required: \"This value is required.\",\n        pattern: \"This value seems to be invalid.\",\n        min: \"This value should be greater than or equal to %s.\",\n        max: \"This value should be lower than or equal to %s.\",\n        range: \"This value should be between %s and %s.\",\n        minlength: \"This value is too short. It should have %s characters or more.\",\n        maxlength: \"This value is too long. It should have %s characters or fewer.\",\n        length: \"This value length is invalid. It should be between %s and %s characters long.\",\n        mincheck: \"You must select at least %s choices.\",\n        maxcheck: \"You must select %s choices or fewer.\",\n        check: \"You must select between %s and %s choices.\",\n        equalto: \"This value should be the same.\",\n        euvatin: \"It's not a valid VAT Identification Number.\"\n    });\n    Parsley.setLocale('en');\n\n    function InputEvent() {\n        var _this = this;\n\n        var globals = window || global; // Slightly odd way construct our object. This way methods are force bound.\n        // Used to test for duplicate library.\n\n        _extends(this, {\n            // For browsers that do not support isTrusted, assumes event is native.\n            isNativeEvent: function isNativeEvent(evt) {\n                return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n            },\n            fakeInputEvent: function fakeInputEvent(evt) {\n                if (_this.isNativeEvent(evt)) {\n                    $(evt.target).trigger('input');\n                }\n            },\n            misbehaves: function misbehaves(evt) {\n                if (_this.isNativeEvent(evt)) {\n                    _this.behavesOk(evt);\n\n                    $(document).on('change.inputevent', evt.data.selector, _this.fakeInputEvent);\n\n                    _this.fakeInputEvent(evt);\n                }\n            },\n            behavesOk: function behavesOk(evt) {\n                if (_this.isNativeEvent(evt)) {\n                    $(document) // Simply unbinds the testing handler\n                        .off('input.inputevent', evt.data.selector, _this.behavesOk).off('change.inputevent', evt.data.selector, _this.misbehaves);\n                }\n            },\n            // Bind the testing handlers\n            install: function install() {\n                if (globals.inputEventPatched) {\n                    return;\n                }\n\n                globals.inputEventPatched = '0.0.3';\n                var _arr = ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]'];\n\n                for (var _i = 0; _i < _arr.length; _i++) {\n                    var selector = _arr[_i];\n                    $(document).on('input.inputevent', selector, {\n                        selector: selector\n                    }, _this.behavesOk).on('change.inputevent', selector, {\n                        selector: selector\n                    }, _this.misbehaves);\n                }\n            },\n            uninstall: function uninstall() {\n                delete globals.inputEventPatched;\n                $(document).off('.inputevent');\n            }\n        });\n    }\n    var inputevent = new InputEvent();\n\n    inputevent.install();\n\n    return Parsley;\n\n})));\n//# sourceMappingURL=parsley.js.map","// Validation errors messages for Parsley\n// Load this after Parsley\n\nParsley.addMessages('nl', {\n  defaultMessage: \"Deze waarde lijkt onjuist.\",\n  type: {\n    email:        \"Dit lijkt geen geldig e-mail adres te zijn.\",\n    url:          \"Dit lijkt geen geldige URL te zijn.\",\n    number:       \"Deze waarde moet een nummer zijn.\",\n    integer:      \"Deze waarde moet een nummer zijn.\",\n    digits:       \"Deze waarde moet numeriek zijn.\",\n    alphanum:     \"Deze waarde moet alfanumeriek zijn.\"\n  },\n  notblank:       \"Deze waarde mag niet leeg zijn.\",\n  required:       \"Dit veld is verplicht.\",\n  pattern:        \"Deze waarde lijkt onjuist te zijn.\",\n  min:            \"Deze waarde mag niet lager zijn dan %s.\",\n  max:            \"Deze waarde mag niet groter zijn dan %s.\",\n  range:          \"Deze waarde moet tussen %s en %s liggen.\",\n  minlength:      \"Deze tekst is te kort. Deze moet uit minimaal %s karakters bestaan.\",\n  maxlength:      \"Deze waarde is te lang. Deze mag maximaal %s karakters lang zijn.\",\n  length:         \"Deze waarde moet tussen %s en %s karakters lang zijn.\",\n  equalto:        \"Deze waardes moeten identiek zijn.\"\n});\n\nParsley.setLocale('nl');\n"]}